[
  {
    "objectID": "r-overview.html",
    "href": "r-overview.html",
    "title": "What is ‘R’?",
    "section": "",
    "text": "R is a computer programming language. The R language is leading in statistical analyses and is considered a field standard for data science.\nPowerful for creating figures and data exploration. I’d recommend browsing these wesites for data visualization in R: R Graph Gallery top 50 ggplot ext\nR is a language and users have contributed R “packages” or “libraries”. These are collections of specific commands and protocols. Examples: Seabird, single-cell RNA-seq.\nHighly transferable skill."
  },
  {
    "objectID": "r-overview.html#running-code",
    "href": "r-overview.html#running-code",
    "title": "What is ‘R’?",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "file-location.html",
    "href": "file-location.html",
    "title": "File structure",
    "section": "",
    "text": "Your computer files and folders can all be accessed via the ‘Terminal’.\nThis is the location of a file called greeting.txt on my computer.\n\nThe exact same file can be found via the terminal."
  },
  {
    "objectID": "file-location.html#basics-of-the-terminal",
    "href": "file-location.html#basics-of-the-terminal",
    "title": "File structure",
    "section": "2 Basics of the terminal",
    "text": "2 Basics of the terminal\nls List files\npwd Print working directory\ncd Change directories\nless Show preview in terminal (quit by hitting “q”)\nmv Move file\nmkdir Make a new folder or directory\n\n2.1 Activity\n\nPull up the last document you opened on your computer. Repeat this in terminal. What is the path location of that file?\n\nless Desktop/secret_folder/topsecret/greetings.txt\n\n\n2.2 Activity\n\nHow would you move a file titled “tmp.csv” from your current directory to one called archived-files?\n\n# mv [file] [location]\n\n\n2.3 Activity\n\nCreate a new directory in r-intro-docs called HELLO. Move greeting.txt to that new directory. What is the full path of greeting.txt?"
  },
  {
    "objectID": "file-location.html#organizing-naming-files",
    "href": "file-location.html#organizing-naming-files",
    "title": "File structure",
    "section": "3 Organizing & naming files",
    "text": "3 Organizing & naming files\n\nThemes in file naming\nDo not use spaces or special symbols. Dashes and underscores are helpful!\nCapitalization matters"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Introduction to the R programming language workshop.\nThis websites hosts material for live coding instruction from Sarah Hu. Work with Sarah to schedule time for each section. A tentative schedule is available below."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "r-overview.html#what-about-other-computing-languages",
    "href": "r-overview.html#what-about-other-computing-languages",
    "title": "What is ‘R’?",
    "section": "2 What about other computing languages?",
    "text": "2 What about other computing languages?\nDiscussion of coding examples, python, julia, and others..\nTransferable skill"
  },
  {
    "objectID": "r-overview.html#thoughts-recommendations",
    "href": "r-overview.html#thoughts-recommendations",
    "title": "What is ‘R’?",
    "section": "4 Thoughts & recommendations",
    "text": "4 Thoughts & recommendations\nAmount of time spent may seem not useful."
  },
  {
    "objectID": "r-overview.html#common-themes-moving-forward",
    "href": "r-overview.html#common-themes-moving-forward",
    "title": "What is ‘R’?",
    "section": "2 Common themes moving forward",
    "text": "2 Common themes moving forward\n\nDocumentation: have current you write notes from past you to future you\nGoogle it: no matter how you learned R or how advanced you are, you will ultimately be looking things up online. A part of this course will include ‘how to learn R’.\nPatience: Amount of time spent may seem not useful.\n\n More from Allison Horst"
  },
  {
    "objectID": "install.html",
    "href": "install.html",
    "title": "Installing R",
    "section": "",
    "text": "There will be office hours or a specific opportunity to follow the below instructions on your own time and seek help. Please do this before the course begins.\nYou will be emailed the schedule for these office hours."
  },
  {
    "objectID": "install.html#instructions-for-pc",
    "href": "install.html#instructions-for-pc",
    "title": "Installing R",
    "section": "2 Instructions for PC",
    "text": "2 Instructions for PC\n\n2.0.1 R install\npc specific\n\n\n2.0.2 RStudio\npc specific\n\n\n2.0.3 Opening R with RStudio\npc specific Show example of executing code"
  },
  {
    "objectID": "rstudio-orientation.html",
    "href": "rstudio-orientation.html",
    "title": "RStudio",
    "section": "",
    "text": "Interface that will help you write code, keep it organized, run code, see outputs, and save your work.\n\n\n\nFiles\nPackages\nEnvironment\nConsole vs. Terminal"
  },
  {
    "objectID": "rstudio-orientation.html#running-code",
    "href": "rstudio-orientation.html#running-code",
    "title": "RStudio",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "data-types.html",
    "href": "data-types.html",
    "title": "Data classes & data frames",
    "section": "",
    "text": "There are different data classes we will work with in R. Definitions of them and how to determine what data type you are working with is a key foundation of R. See Table 1.\nLet’s start elaborating on what we’ve already used. Use class() and str() to explore data types.\n\n\nUse class() and str() to see how x is defined in this table.\n\n\nTable 1: Definitions of data types in R.\n\n\n\n\n\n\n\n\nTerm\nExample\nCode (x)\nDescription\n\n\n\n\nLogical\nTRUE, FALSE\nx <- TRUE\nTwo data values, also called boolean\n\n\nNumeric\n243, 92.1, or 3.459\nx <- 3.14\nNumbers, including those with decimals. Standard input for most statistical tools.\n\n\nInteger\n10L, 65L, or 0L\nx <- 314L\nNumbers without decimals. Needs to be specified as an integer.\n\n\nCharacter\n“seven”, “hello world”, “FALSE”, ‘63.354’, “600”\nx <- \"150\"\nRepresents a string of values as a variable. Use '' for character variables and \"\" for string variables.\n\n\nComplex\n6 + 5i\nx <- 6 + 8i\nData type with an imaginary part, in this case i.\n\n\n\n\nThe data classes above represent the core basic “data types”. Vectors are comprised of elements of different classes.\n\n\n\nUse the below examples to understand how R interprets different data classes and how they are elements within a vector.\nWhat is “juice”?\n\njuice <- 4 + 4\nclass(juice)\nclass(4)\nclass(8.3)\nclass(4L)\n\nWhat about x?\n\nx <- c(1, 7, 9)\nclass(x)\n\napples <- 5\noranges <- 6\nfruit <- apples + oranges\n\nHow is the below vector different from above?\n\nx <- c(\"1\", \"7\", \"9\")\nclass(x)\n\nLet’s write over x, and set it equal to types of fruit.\n\nx <- c(\"banana\", \"grapefruit\")\nclass(x)\n\nInstead of a numeric value, a character is a string type. Let’s experiment with the numeric vs. character data type. Lets combine our character list of fruit with the earlier defined “apples”.\n\nx\napples\n\nnew_x <- c(x, apples)\n\nWhat happened to the data class of new_x when we combined character and numeric?\nCreate another vector\n\nnumeric_vector <- c(1, 10, 49, 5)\ncharacter_vector <- c(\"a\", \"b\", \"c\", \"d\")\n\nnames(numeric_vector) <- character_vector\n\nWhat does names() do above?\n\nnumeric_vector\n\n# Isolate a numeric within the vector\nq <- numeric_vector[4]\n\n# Modify elements within a vector\nq + numeric_vector\n\n# Evaluate vector based on value\nans <- q > numeric_vector\nans"
  },
  {
    "objectID": "data-types.html#running-code",
    "href": "data-types.html#running-code",
    "title": "Data classes & data frames",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "basic-syntax.html",
    "href": "basic-syntax.html",
    "title": "Basic syntax",
    "section": "",
    "text": "Keep the intro.R script open, but now type directly into the R console below.\n\n3 + 5\n\n[1] 8\n\n\nWhat happens to the output?\n\n\nAssign an R object called juice to be equal to 4+4. What is the output when you type juice?\n\njuice <- 4 + 4\n\n# juice\n\nCan you describe what you think x indicates below?\n\nx <- c(1,7,9)\nx[2]\n\n[1] 7\n\n\nThe notation c() in R stands for combine. We used this a lot in R because we are often combining data and comparing it with another dataset.\nWhat do you think the R object fruit is?\n\napples <- 5\noranges <- 6\n\nfruit <- apples + oranges"
  },
  {
    "objectID": "tidyverse-intro.html",
    "href": "tidyverse-intro.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Lets use tidyverse to modify the pizza data.\n\nhead(pizza)\n\nIntroducing the pipe operator. A key for working in tidyverse. Some fun background it.\n\npizza %&gt;% select(type)\ntypes_of_pizza &lt;- pizza %&gt;% select(type)\ntypes_of_pizza_char &lt;- as.character(pizza %&gt;% select(type))\n\nSelect can also be used to re-name a column or remove a column.\n\npizza_new &lt;- pizza %&gt;% \n  select(style = type, everything(), -X)"
  },
  {
    "objectID": "tidyverse-intro.html#running-code",
    "href": "tidyverse-intro.html#running-code",
    "title": "Tidyverse introduction",
    "section": "2 Running Code",
    "text": "2 Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "rstudio-orientation.html#file-structure-projects",
    "href": "rstudio-orientation.html#file-structure-projects",
    "title": "RStudio",
    "section": "2 File structure & projects",
    "text": "2 File structure & projects\n\nFind where you have downloaded and sorted the r-intro-docs directory. Navigate under Files in RStudio. See how the path is illustrated?\nSave a new R project as introduction-to-R in this directory.\nClose RStudio.\nNavigate to where your R project is saved and open this file, introduction-to-R.Rproj. This should automatically open RStudio and the files panel will open to this project directory.\nOpen r-intro-docs/intro.R. This is an R script. It looks like a text file. This is your primary workspace, where you can edit, document, and modify code. You execute each line by running the code."
  },
  {
    "objectID": "rstudio-orientation.html#executing-commands",
    "href": "rstudio-orientation.html#executing-commands",
    "title": "RStudio",
    "section": "3 Executing commands",
    "text": "3 Executing commands\nThe Rscript within Rstudio works like a raw text file, where most shortcut keys like copy/paste and home/end will work. As the course continues we will share what shortcut keys we often use - at any time you can also google “short cut keys RStudio for Mac” to find more.\nIn the script intro.R, place cursor next to one of the lines of code and run the command.\n\n3.1 Mac\nTo run a command on a Mac, place cursor on the line you want to execute or highlight the code. Press COMMAND + ENTER.\n\n\n3.2 PC\nTo run a command on a PC, place cursor on the line you want to execute or highlight the code. Press CONTROL + ENTER.\n\n3.2.1 Activity\n\nPractice executing the lines of code below. Document your code with information on what happens each time you execute a line.\n\n\n?sort()\n\n10^10\n\nx <- c(\"hello\", \"hey\", howdy)\n\nx <- c(\"hello\", \"hey\", \"howdy\")\n\nstr(x)\n\nprint(hello world)\n\ny <- print(\"hello world\")\n\ndata.frame(x, x)"
  },
  {
    "objectID": "rstudio-orientation.html#getting-help-online-resources",
    "href": "rstudio-orientation.html#getting-help-online-resources",
    "title": "RStudio",
    "section": "4 Getting help & online resources",
    "text": "4 Getting help & online resources\nRStudio has a lot of built in help options.\n\n?sort()"
  },
  {
    "objectID": "file-location.html#computer-file-structure",
    "href": "file-location.html#computer-file-structure",
    "title": "Course organization & file structure",
    "section": "2 Computer file structure",
    "text": "2 Computer file structure\n\nYour computer files and folders can all be accessed via the ‘Terminal’.\nShow examples of using the terminal end goal is that everyone can navigate the terminal and computer (interface) similarly. Show ‘tab complete’\n\n\n2.1 Activity\n\nPull up the last document you opened on your computer. Repeat this in terminal. What is the path location of that file?"
  },
  {
    "objectID": "index.html#required-pre-requisite",
    "href": "index.html#required-pre-requisite",
    "title": "Welcome",
    "section": "Required pre-requisite",
    "text": "Required pre-requisite\n\nUpdated laptop (Mac or PC). Instructor will use a Mac\nInternet connection\nFill out the pre-course survey - also see the Benchmarks section to the left\nReview the Code of Conduct"
  },
  {
    "objectID": "index.html#recommended-preparation",
    "href": "index.html#recommended-preparation",
    "title": "Welcome",
    "section": "Recommended preparation",
    "text": "Recommended preparation\n\nMake sure R and RStudio are set up on your computer and working\nDetermine how to open up the Terminal on your computer\nCome with questions on how you want to use R\n\n\n\n\nPhD Comics Jorge Cham"
  },
  {
    "objectID": "index.html#course-organization",
    "href": "index.html#course-organization",
    "title": "Welcome",
    "section": "Course organization",
    "text": "Course organization\nThis course is designed as a “crash course” that takes place only over a few days, in longer blocks of time. There will be frequent breaks. At any time raise your hand or use the ‘raise hand’ option remotely to ask a question.\nPlease note that learning R is similar to learning a whole new language. Additionally, we do not expect any prior experience for this course. Together, this means that each learner will have their own pace and experience during the course. Please be respectful of this and if you see how you can help someone, do so!\nFor instruction, we will be live coding the entire time. While most of the code is available on this website, the live coding aspect will help immerse you into coding in R. During each live coding session, the R script for each session will be saved and uploaded so you can access it in the future. This is because the code on this page is meant to be minimal, and during the coding sessions we will expand upon what is shown and document as we go along.\nIn order to keep a pulse on the pace of the class, please use the raising hand acknowledgement or the post it note approach to indicate to the instructor(s) that you need the content to slow down or you are stuck.\nSince we are all learning together, we will also use the term buddy up to take a pause and ask your direct neighbors for help or come together with the people around you to troubleshoot the problem.\n\n\n\nAllison Horst"
  },
  {
    "objectID": "index.html#getting-help",
    "href": "index.html#getting-help",
    "title": "Welcome",
    "section": "Getting help",
    "text": "Getting help\n\nTAMU data science community"
  },
  {
    "objectID": "index.html#saved-sessions",
    "href": "index.html#saved-sessions",
    "title": "Welcome",
    "section": "Saved sessions",
    "text": "Saved sessions"
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "Welcome",
    "section": "Code of conduct",
    "text": "Code of conduct\nBy participating in this course all participants are required to follow the Code of Conduct.\nThis text is adapted from guidelines written for The Carpentries Handbook. Additional language was added under a CC BY 3.0 license"
  },
  {
    "objectID": "index.html#sessions-archive",
    "href": "index.html#sessions-archive",
    "title": "Welcome",
    "section": "Sessions archive",
    "text": "Sessions archive\nThis course is meant to evolve over time, be re-taught, and referred to in the future. See the directory introduction-to-R/sessions to find the saved code from your session."
  },
  {
    "objectID": "basic-syntax.html#operators",
    "href": "basic-syntax.html#operators",
    "title": "Basic syntax",
    "section": "2 Operators",
    "text": "2 Operators\nSymbols in R are used in arguments, logical statements, assignments, and more. We will use many of them, but the common ones\n\n# <- vs. =\na = 3 + 4\na <- 3 + 4"
  },
  {
    "objectID": "basic-syntax.html#errors",
    "href": "basic-syntax.html#errors",
    "title": "Basic syntax",
    "section": "3 Errors",
    "text": "3 Errors\n\n# Errors and improper R object naming\n# 6389/\n\n# 5-6\n\n# 5.6 <- fruit\n\n\n3.1 Activity\n\nThere are several ways to view or look at an R object. Can you figure out what they are?\n\n\n\n3.2 Activity\n\nCalculate the volume of a sphere, where the diameter is 20 meters.\n\n\n\n3.3 A note on documenting code\nMake sure current you keeps track of everything. Future you will Thank past you.\nAlso use the pound symbol or hashtag mark, “#” to comment out code.\n# This code adds the values x and y, creating an R object called 'answer'\n\nanswer <- x + y\n\nx <- 5\ny <- x^2\n\n## We can set x equal a specific value to define x, y, and answer."
  },
  {
    "objectID": "data-types.html#data-frames",
    "href": "data-types.html#data-frames",
    "title": "Data classes & data frames",
    "section": "4 Data frames",
    "text": "4 Data frames\nCreate a data frame and explore the structure. Data frames are the most common way to view datasets that you eventually want to modify and/or make plots from. They can also include different types of data.\n\ngreetings <- c(\"Hey\", \"Hi\", \"Howdy\", \"Hello\", \"Morning\")\n\nn <- c(99, 15, 324, 54, 23)\n\ndf <- data.frame(greetings, n)\n\nView the data frame you put together and what types of data are in your data frame?\n\n# print (df)\n# df\n# View(df)\n\nData are representative of a type of greeting in the first column, and the number of times the greeting was observed (n).\n\n4.1 Isolating elements of a data frame\nWe need to use specific R syntax to pull out individual rows and columns of a data frame. Isolate a single column.\nWe will use this [row, column]\n\n# df$\n\n\n# df[]\n\n\n\n4.2 Modify the data frame\nLet’s use the command rbind() to add on a row. We forgot to add in the greeting “Afternoon”, let’s say this was observed 18 times.\n\naddition <- c(\"Afternoon\", 18)\n# ?rbind()\n\n\ndf <- rbind(df, addition) # writing over the original df\n\nAnd let’s change the headers so they are more meaningful.\n\ncolnames(df)\nnames(df)\n\ncolnames(df)[1:2]\n\ncolnames(df)[1:2] <- c(\"Greeting\", \"Observed\")\n\n\n\n4.3 Activity\n\nIsolate the number of times “howdy” was observed. Set this equal to an R object.\n\n\n\n\n\n\n4.4 Activity\n\nSet the number of times a greeting occured to a numeric."
  },
  {
    "objectID": "tidyverse-intro.html#see-bvcn-code-and-re-write-in-similar-fashion",
    "href": "tidyverse-intro.html#see-bvcn-code-and-re-write-in-similar-fashion",
    "title": "Tidyverse",
    "section": "2 See BVCN code and re-write in similar fashion",
    "text": "2 See BVCN code and re-write in similar fashion"
  },
  {
    "objectID": "tidyverse-intro.html#what-is-tidyverse",
    "href": "tidyverse-intro.html#what-is-tidyverse",
    "title": "Tidyverse",
    "section": "5 What is tidyverse?",
    "text": "5 What is tidyverse?"
  },
  {
    "objectID": "tidyverse-intro.html#select",
    "href": "tidyverse-intro.html#select",
    "title": "Tidyverse",
    "section": "2 select()",
    "text": "2 select()"
  },
  {
    "objectID": "tidyverse-intro.html#filter",
    "href": "tidyverse-intro.html#filter",
    "title": "Tidyverse",
    "section": "2 filter()",
    "text": "2 filter()\n\npizza %&gt;% \n  select(style = type, everything(), -X) %&gt;% \n  filter(num_toppings &gt; 2)\n\nNote the change to output the information, rather than save it as a new R object. Also see how the pipe stitches everything together in a tidy way?\n\npizza %&gt;% \n  select(style = type, everything(), -X) %&gt;% \n  filter(num_toppings &gt; 2) %&gt;% \n  filter(red_sauce == TRUE)\n\n\n2.0.1 Activity\n\nTry the commented out lines below. Describe the difference.\n\n\npizza %&gt;% \n  select(style = type, everything(), -X) %&gt;% \n  # filter(num_toppings &gt; 2 | red_sauce == TRUE) #\n  # filter(num_toppings &gt; 2 & red_sauce == TRUE)"
  },
  {
    "objectID": "tidyverse-intro.html#long-vs.-wide-format",
    "href": "tidyverse-intro.html#long-vs.-wide-format",
    "title": "Tidyverse",
    "section": "3 Long vs. wide format",
    "text": "3 Long vs. wide format\ntibble: is a dataframe specific version for tidyverse. It is both an object and a tibble. So it talks well with all of the related packages. Columns in a tibble are character vectors (instead of factors). This is technically easier to deal with."
  },
  {
    "objectID": "tidyverse-intro.html#group_by",
    "href": "tidyverse-intro.html#group_by",
    "title": "Tidyverse",
    "section": "4 group_by()",
    "text": "4 group_by()\n\n4.1 summarise()"
  },
  {
    "objectID": "StarWars.html",
    "href": "StarWars.html",
    "title": "Star Wars data",
    "section": "",
    "text": "library(tidyverse)\nhead(starwars)\n\n# A tibble: 6 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\n2 C-3PO        167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n3 R2-D2         96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\n5 Leia Org…    150    49 brown      light      brown           19   fema… femin…\n6 Owen Lars    178   120 brown, gr… light      blue            52   male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "StarWars.html#section",
    "href": "StarWars.html#section",
    "title": "Star Wars data",
    "section": "2 ",
    "text": "2"
  },
  {
    "objectID": "packages-libraries.html",
    "href": "packages-libraries.html",
    "title": "R packages",
    "section": "",
    "text": "Pre-packaged code and commands for you to use. Like opening a specialized program or application on your computer.\n\ninstall.packages(\"vegan\")\nlibrary(vegan)\n\nadd in text about finding other R packages and show another example.\n\n\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\n\n\n\n\n\nRead the error\nGoogle it!\nTypos are actually your friend"
  },
  {
    "objectID": "basic-plots.html#point-line",
    "href": "basic-plots.html#point-line",
    "title": "Basic plots",
    "section": "0.2 Point & line",
    "text": "0.2 Point & line\nFor all humans in Star Wars, what is their relationship between height and weight? and is it impacted by their planet of origin?\n\nstarwars %&gt;%"
  },
  {
    "objectID": "basic-plots.html#boxplot",
    "href": "basic-plots.html#boxplot",
    "title": "Basic plots",
    "section": "0.3 Boxplot",
    "text": "0.3 Boxplot"
  },
  {
    "objectID": "basic-plots.html#bubble",
    "href": "basic-plots.html#bubble",
    "title": "Basic plots",
    "section": "4 Bubble",
    "text": "4 Bubble"
  },
  {
    "objectID": "basic-plots.html#heat-map",
    "href": "basic-plots.html#heat-map",
    "title": "Basic plots",
    "section": "5 Heat map",
    "text": "5 Heat map"
  },
  {
    "objectID": "basic-plots.html#section",
    "href": "basic-plots.html#section",
    "title": "Basic plots",
    "section": "6 ",
    "text": "6"
  },
  {
    "objectID": "install.html#download-rstudio",
    "href": "install.html#download-rstudio",
    "title": "Installing R",
    "section": "2 Download RStudio",
    "text": "2 Download RStudio\nAbove, you’ve installed the R programming language to your computer. If you’re in a terminal, you can interact/engage R by typing “R” anywhere. This will launch R, but this is only the consol to type in code. RStudio is a user interface that makes using R more comprehensive.\nDownload RStudio from posit.\nYou should have RStudio version 2022.12.0.\n\n2.1 Alternative instructions for installing R and RStudio\n\nVideo\nSoftware Carpentry intro to R course\nAdditional written instructions\nconda install *Please note that this option has additional steps required and the version currently available through conda is not recent. Try something like this conda install -c conda-forge r-base=4.1.2"
  },
  {
    "objectID": "install.html#open-rstudio",
    "href": "install.html#open-rstudio",
    "title": "Installing R",
    "section": "3 Open RStudio",
    "text": "3 Open RStudio\nRStudio will be added to your computers Applications or Programs. Open it as you would any other application. You should see a page that looks like this:"
  },
  {
    "objectID": "install.html#download-r",
    "href": "install.html#download-r",
    "title": "Installing R",
    "section": "1 Download R",
    "text": "1 Download R\nYou can install from the R CRAN page directly. Or visit the PC or Mac specific pages below.\nPC: For installing on a PC computer, visit this page.\nMac: For a Mac, visit this page to download to your computer.\nThe most recent version is 4.2.2, please have any version over 4.0 for this course."
  },
  {
    "objectID": "r-overview.html#base-r-versus-tidyverse",
    "href": "r-overview.html#base-r-versus-tidyverse",
    "title": "What is ‘R’?",
    "section": "3 Base R versus Tidyverse",
    "text": "3 Base R versus Tidyverse"
  },
  {
    "objectID": "code-of-conduct.html",
    "href": "code-of-conduct.html",
    "title": "Code of conduct",
    "section": "",
    "text": "TO DO: revise and update for TAMU work?\nWe are dedicated to providing a welcoming and supportive environment for all people, regardless of background or identity. By participating in this community, participants accept to abide by The Carpentries’ Code of Conduct and accept the procedures by which any Code of Conduct incidents are resolved. Any form of behaviour to exclude, intimidate, or cause discomfort is a violation of the Code of Conduct. In order to foster a positive and professional learning environment we encourage the following kinds of behaviours in all platforms and events:\nUse welcoming and inclusive language\nBe respectful of different viewpoints and experiences\nGracefully accept constructive criticism\nFocus on what is best for the community\nShow courtesy and respect towards other community members\nIf you believe someone is violating the Code of Conduct, we ask that you report it to The Carpentries Code of Conduct Committee completing this form, who will take the appropriate action to address the situation.\nCode of Conduct (Detailed View) Part 1. Introduction\nThe Carpentries is a community-led project. We value the involvement of everyone in the community. We are committed to creating a friendly and respectful place for learning, teaching and contributing. All participants in our events and communications are expected to show respect and courtesy to others.\nTo make clear what is expected, everyone participating in The Carpentries activities is required to conform to the Code of Conduct. This Code of Conduct applies to all spaces managed by The Carpentries including, but not limited to, workshops, email lists, and online forums such as GitHub, Slack and Twitter. Workshop hosts are expected to assist with the enforcement of the Code of Conduct.\nThe Carpentries Code of Conduct Committee is responsible for enforcing the Code of Conduct. It can be contacted by emailing coc@carpentries.org. All reports will be reviewed by the Code of Conduct Committee and will be kept confidential.\nPart 2. The Carpentries Code of Conduct\nThe Carpentries is dedicated to providing a welcoming and supportive environment for all people, regardless of background or identity. As such, we do not tolerate behaviour that is disrespectful to our teachers or learners or that excludes, intimidates, or causes discomfort to others. We do not tolerate discrimination or harassment based on characteristics that include, but are not limited to, gender identity and expression, sexual orientation, disability, physical appearance, body size, citizenship, nationality, ethnic or social origin, pregnancy, familial status, veteran status, genetic information, religion or belief (or lack thereof), membership of a national minority, property, age, education, socio-economic status, technical choices, and experience level.\nEveryone who participates in Carpentries activities is required to conform to this Code of Conduct. It applies to all spaces managed by The Carpentries including, but not limited to, workshops, email lists, and online forums such as GitHub, Slack and Twitter. Workshop hosts are expected to assist with the enforcement of the Code of Conduct. By participating, participants indicate their acceptance of the procedures by which The Carpentries resolves any Code of Conduct incidents, which may include storage and processing of their personal information.\nPart 2.1 Expected behaviour\nAll participants in our events and communications are expected to show respect and courtesy to others. All interactions should be professional regardless of platform: either online or in-person. In order to foster a positive and professional learning environment we encourage the following kinds of behaviours in all Carpentries events and platforms:\nUse welcoming and inclusive language\nBe respectful of different viewpoints and experiences\nGracefully accept constructive criticism\nFocus on what is best for the community\nShow courtesy and respect towards other community members\nNote: See the four social rules for further recommendations.\nPart 2.2 Unacceptable behaviour\nExamples of unacceptable behaviour by participants at any Carpentries event/platform include:\nwritten or verbal comments which have the effect of excluding people on the basis of membership of any specific group\ncausing someone to fear for their safety, such as through stalking, following, or intimidation\nviolent threats or language directed against another person\nthe display of sexual or violent images\nunwelcome sexual attention\nnonconsensual or unwelcome physical contact\nsustained disruption of talks, events or communications\ninsults or put downs\nsexist, racist, homophobic, transphobic, ableist, or exclusionary jokes\nexcessive swearing\nincitement to violence, suicide, or self-harm\ncontinuing to initiate interaction (including photography or recording) with someone after being asked to stop\npublication of private communication without consent\nPart 2.3 Consequences of Unacceptable behaviour\nParticipants who are asked to stop any inappropriate behaviour are expected to comply immediately. This applies to any Carpentries events and platforms, either online or in-person. If a participant engages in behaviour that violates this code of conduct, the organisers may warn the offender, ask them to leave the event or platform (without refund), or engage The Carpentries Code of Conduct Committee to investigate the Code of Conduct violation and impose appropriate sanctions.\nProcess Flow Diagram The diagram below illustrates the following steps in following a Code of Conduct report.\nFirst report -> assess if there is a CoC report and clear breach\nNo report or breach -> respond with an explanation to the reporter\nBreach identified -> set up a first meeting with the CoCc (Read about Incident Response Group in CoCc Governance) to collectively identify specific issues and breaches\nIf a specific breach/issue was not identified -> reply to the reporter\nIf a specific breach/issue was identified -> email the reporter/reportee as explained in CoC report handling and enforcement process\nIf it was undecided that a breach/issue occurred -> hold a meeting with the reporter/reportee as explained in CoC report handling and enforcement process -> Hold a second meeting with the CoCc to identify consequence/next steps as explained in CoC report handling and enforcement process"
  },
  {
    "objectID": "exporting-data.html",
    "href": "exporting-data.html",
    "title": "Export data",
    "section": "",
    "text": "This is where pulling up the help menu and/or using the RStudio auto complete will help ensure you’ve included all the elements you need.\n\n?write_delim()\n\n?write.csv()\n\n?write.table()\n\nLets practice exporting pizza in a variety of ways. Open each one up to see how it imports into Excel.\n\npizza\nwrite_delim(pizza, file = \"pizza-withtab-quotes.txt\", delim = \"\\t\", quote = \"all\")\nwrite_delim(pizza, file = \"pizza-nocols.txt\", quote = \"none\", col_names = FALSE)\nwrite.csv(pizza, file = \"pizza-csv.csv\", row.names = TRUE) # Try changing this to FALSE"
  },
  {
    "objectID": "index.html#references-sources-for-course-material",
    "href": "index.html#references-sources-for-course-material",
    "title": "Welcome",
    "section": "References & sources for course material",
    "text": "References & sources for course material\n\nR for Reproducible Scientific Analysis from Software Carpentry\nBioinformatics Virtual Coordination Network - R section (also see youtube channel)\nRiffomonas"
  },
  {
    "objectID": "importing-data.html",
    "href": "importing-data.html",
    "title": "Data import",
    "section": "",
    "text": "In the files section of your RStudio, click on the r-intro-docs directory. You should see a list of files.\nLets save the greetings R object as a csv file in the r-intro-docs directory.\n\n# First re-create if needed\ngreetings <- c(\"Hey\", \"Hi\", \"Howdy\", \"Hello\", \"Morning\")\nn <- c(99, 15, 324, 54, 23)\ndf <- data.frame(greetings, n)\naddition <- c(\"Afternoon\", 18)\n\ngreetings <- rbind(df, addition)\n\nDiscuss tab completion!\n\nwrite.csv(greetings, \"r-intro-docs/greetings.csv\")\n\nOpen up greetings.csv locally. What does it look like in Excel?\n\n?write.csv()\n?write.table()\n\n\n\nImport pizza using read.csv().\n\n\n\n\npizza <- read.csv(\"r-intro-docs/pizza.csv\") \n\n\n\n\nWithin the Tidyverse there is a Star Wars dataset we will use to explore data manipulation and wrangling in R.\nEnsure Tidyverse is installed.\n\nlibrary(tidyverse)\n\ndata(\"starwars\")\n\nView(starwars)\n\n\n\n\n\nChoose Star Wars or Pizza and describe the data types.\n\n\n\n\n\n\n\nData is from an ASV table from Hu et al. 2022.\n\n\n\nImport the ASV table and associated metadata table that are in the r-intro-docs directory. Set them equal to asv_table and metadata, respectively.\n\nasv_table <- \n\nmetadata <-\n\nUse the command summary() to learn more about the data frames we’ve imported above.\n\nsummary(asv_table)\nhead(asv_table)\nhead(metadata)\n\nWe will come back to this larger dataset after we explore some tidyverse functions."
  },
  {
    "objectID": "install.html#download-access-workshop-content",
    "href": "install.html#download-access-workshop-content",
    "title": "Installing R",
    "section": "4 Download & access workshop content",
    "text": "4 Download & access workshop content\n\n4.1 Access via terminal\n\nNavigate to the GitHub associated with this workshop HERE.\nRight click r-intro-docs and select Copy link.\nNavigate to where you want to work via the Terminal and use wget to download the directory.\nMake sure this can be viewed and opened in the ‘files / directory’ pane in RStudio.\n\nor, copy and paste the below line in terminal.\n\nwget https://github.com/shu251/introduction-to-R/tree/main/r-intro-docs\n\n\n\n4.2 Via workshop email\n\nDownload attached folder called r-intro-docs.\nMove this to where on your computer you want to work.\nUse the files/directory pane in RStudio to find that folder."
  },
  {
    "objectID": "file-location.html#pro-tips-for-organizing-naming-files",
    "href": "file-location.html#pro-tips-for-organizing-naming-files",
    "title": "File structure",
    "section": "3 Pro tips for organizing & naming files",
    "text": "3 Pro tips for organizing & naming files\n\nUse a consistent theme in file naming\nDo not use spaces or special symbols. Dashes and underscores are helpful! (avoid using periods in file names too)\nCapitalization matters (and can be helpful)\nWhat else?"
  },
  {
    "objectID": "r-overview.html#integrationg-across-languages",
    "href": "r-overview.html#integrationg-across-languages",
    "title": "What is ‘R’?",
    "section": "3 Integrationg across languages",
    "text": "3 Integrationg across languages\nA major pro to using RStudio, is how the new Posit system integrates with other computer languages (python, julia, etc.). This is ideal for projects where collaborators use a variety of R and python. Additionally, the GUI of RStudio is helpful for new learners and a great way to keep files and analyses on your computer organized.\nI’ve actually created this entire website using RStudio (and Quarto within RStudio). As an example, I also use this feature to create websites for showing preliminary data and publishing alongside articles."
  },
  {
    "objectID": "data-types.html#lists",
    "href": "data-types.html#lists",
    "title": "Data classes & data frames",
    "section": "2 Lists",
    "text": "2 Lists\nA list can be a list of anything. But everything in the list does NOT need to be the same data type (in contrast to the vector, above). Because lists can include different data types and data sets, they can be used to store information, like a dictionary.\n\nlist_example <- list(2^4, \"cabbage\", TRUE, 1+5i)\n\n\nlist_example_2 <- list(2E2, \"lettuce\", VALUES = 1:25, VALUES_BINARY = FALSE)\n\n\nlist_example_2$VALUES\n\ntypeof(list_example_2$VALUES)\n\ntypeof(list_example_2$VALUES_BINARY)"
  },
  {
    "objectID": "data-types.html#matrices",
    "href": "data-types.html#matrices",
    "title": "Data classes & data frames",
    "section": "3 Matrices",
    "text": "3 Matrices\nWhen do you use one over the other? It depends on what kind of data you’re working with. If you’re working with different types of information in the same table, you likely need a data frame. But if you’re working with a single data type, a matrix may be better for you. Additionally, matrices are more efficient with respect to memory. Therefore, a lot of statistical tools/methods require a matrix as input.\nCreate a matrix.\n\nmatrix(1:9, byrow = FALSE, nrow = 3)\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\n\nq <- c(460, 314)\nr <- c(290, 247)\nw <- c(309, 165)\n\nc(q, r, w)\n\n[1] 460 314 290 247 309 165\n\nmydataset <- matrix(c(q, r, w), byrow = TRUE, nrow = 3)\nmydataset\n\n     [,1] [,2]\n[1,]  460  314\n[2,]  290  247\n[3,]  309  165\n\n\n\nregion <- c(\"one\", \"two\")\ncategory <- c(\"A\",\"B\",\"C\")\n\nrownames(mydataset) <- category\ncolnames(mydataset) <- region\n\n\nrowSums(mydataset)\n\n  A   B   C \n774 537 474 \n\ntotals <- rowSums(mydataset)\n\ncbind(mydataset,totals)\n\n  one two totals\nA 460 314    774\nB 290 247    537\nC 309 165    474"
  },
  {
    "objectID": "tidyverse-intro.html#explore-the-tidyverse.",
    "href": "tidyverse-intro.html#explore-the-tidyverse.",
    "title": "Tidyverse",
    "section": "5 Explore the tidyverse.",
    "text": "5 Explore the tidyverse."
  },
  {
    "objectID": "tidyverse-intro.html#mutate",
    "href": "tidyverse-intro.html#mutate",
    "title": "Tidyverse",
    "section": "3 mutate()",
    "text": "3 mutate()\nWe can also start to introduce math. Mutate adds to the data frame.\nThis pizza data frame has the cost and the amount of that we want to order. Lets calculate our total order.\n\npizza$cost\npizza$num_order\n\npizza %&gt;% \n  select(style = type, everything(), -X) %&gt;% \n  mutate()"
  },
  {
    "objectID": "tidyverse-intro.html#wide-vs.-long-format",
    "href": "tidyverse-intro.html#wide-vs.-long-format",
    "title": "Tidyverse",
    "section": "4 Wide vs. long format",
    "text": "4 Wide vs. long format\nCreate another data frame that is in wide format. For meals and snack throughout the day, how large was each meal and how many dishes does the meal produce?\n\ndf_wide &lt;- data.frame(Meal = c('Morning', 'Mid-morning', 'Lunch', 'Mid-afternoon', 'Dinner'),\n                 Weight = c(9, 0, 12, 10, 6),\n                 Dishes = c(3, 0, 1, 1, 4))\ndf_wide\n\n\ndf_long &lt;- df_wide %&gt;% \n  pivot_longer(cols = c('Weight', 'Dishes'), names_to = \"Attribute\", values_to = \"Value\")\n\ndf_long\n\nFor long format data, we will have a column for each of the things we are measuring/recording in our data. A column equates to a variable. For wide data, each row has all the information with categories as columns. ‘pivot_longer()’ lengthens the rows of data and decreases the number of rows.\n\n4.1 Activity\n\nExport ‘df_wide’ as a .csv file. Open in Excel and manually change to a long format data frame.\n\n\n\n4.2 Convert larger dataset from wide to long\nConvert the ASV table to a long format.\n\nhead(asv_table)\nnames(asv_table)\n\n\n# Compare these two approaches\nasv_long &lt;- asv_table %&gt;% \n  pivot_longer(cols = 3:20)\n\nasv_long &lt;- asv_table %&gt;% \n  pivot_longer(starts_with(\"Gorda\"))\n\nTypically data in long format is much more useful for downstream plotting and wrangling."
  },
  {
    "objectID": "StarWars.html#long-vs.-wide-format",
    "href": "StarWars.html#long-vs.-wide-format",
    "title": "Star Wars data",
    "section": "2 Long vs. wide format",
    "text": "2 Long vs. wide format\n\ntatooine &lt;- starwars %&gt;% \n  filter(homeworld == \"Tatooine\") # select only those from Tatooine\n\ntibble: is a dataframe specific version for tidyverse. It is both an object and a tibble. So it talks well with all of the related packages. Columns in a tibble are character vectors (instead of factors). This is technically easier to deal with.\n\n2.0.1 Activity\n\nHow many species on Tatooine?\n\n\nunique(starwars$species)\nlength(unique(starwars$species))\n\nUse your tidyverse cheatsheets and google!\n\n\n2.0.2 Activity\n\nCreate a table of droids that are equal to or greater than 96 inches in height."
  },
  {
    "objectID": "StarWars.html#summarizing-data",
    "href": "StarWars.html#summarizing-data",
    "title": "Star Wars data",
    "section": "3 Summarizing data",
    "text": "3 Summarizing data\nWhat are the average masses of humans versus ewoks?\nUse group_by() and summarize().\n\nstarwars %&gt;% \n  filter(species == \"Human\" | species == \"Ewok\") %&gt;% \n  group_by(species) %&gt;% \n  summarise(MEAN_mass = mean(mass))\n# Modify the above to remove NAs and get a values for Humans.\n\nWhat about the average mass of humans and Ewoks on different planets?\n\nstarwars %&gt;% \n  filter(species == \"Human\" | species == \"Ewok\") %&gt;% \n  group_by(species, homeworld) %&gt;% \n  summarise(MEAN_mass = mean(mass))\n\nsummarize() creates a smaller output table, or a summary. This is dictated by group_by(). Mutate() adds a column to the data.\n\n3.0.1 Activity\n\nAdd a column to star wars that classifies tall versus short, based on the height of each species.\n\n\nAdd a column that defines if the species is Human versus non-human.\n\n\nWhat are the mean masses of humans versus non-humans? And how many examples are included in this table.\n\n\nWhat are the max and min heights of humans and non-humans by planet?"
  },
  {
    "objectID": "asvdata.html#review-long-vs.-wide-format",
    "href": "asvdata.html#review-long-vs.-wide-format",
    "title": "ASV data",
    "section": "2 Review long vs. wide format",
    "text": "2 Review long vs. wide format"
  },
  {
    "objectID": "asvdata.html#combine-based-on-sample",
    "href": "asvdata.html#combine-based-on-sample",
    "title": "ASV data",
    "section": "3 Combine based on SAMPLE",
    "text": "3 Combine based on SAMPLE\nIsolate samples that have a temperature greater than 15 C.\nWhat are the average temperatures at the vent, plume, versus background samples?"
  },
  {
    "objectID": "asvdata.html#parse-taxon-names",
    "href": "asvdata.html#parse-taxon-names",
    "title": "ASV data",
    "section": "3 Parse taxon names",
    "text": "3 Parse taxon names\n\nasv_long %&gt;%"
  },
  {
    "objectID": "asvdata.html#calculate-relative-abundance",
    "href": "asvdata.html#calculate-relative-abundance",
    "title": "ASV data",
    "section": "4 Calculate relative abundance",
    "text": "4 Calculate relative abundance\nCreate a table with sequence counts and ASV counts by supergroup.\n\nasv_long %&gt;% \n\n\n4.1 Make a bar plot\n\nasv_long %&gt;%"
  },
  {
    "objectID": "asvdata.html",
    "href": "asvdata.html",
    "title": "ASV data",
    "section": "",
    "text": "Below we will use the provided ASV data to combine two data frames and perform some typical calculations."
  },
  {
    "objectID": "asvdata.html#look-asv-and-metadata",
    "href": "asvdata.html#look-asv-and-metadata",
    "title": "ASV data",
    "section": "1 Look ASV and metadata",
    "text": "1 Look ASV and metadata"
  },
  {
    "objectID": "basic-plots.html",
    "href": "basic-plots.html",
    "title": "Basic plots",
    "section": "",
    "text": "Also see: https://github.com/biovcnet/topic-R/blob/master/Lesson-6/lesson-06-bvcn-full.R"
  },
  {
    "objectID": "basic-plots.html#bar",
    "href": "basic-plots.html#bar",
    "title": "Basic plots",
    "section": "0.1 Bar",
    "text": "0.1 Bar\n\nlibrary(tidyverse)\nhead(starwars)\n\n# A tibble: 6 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\n2 C-3PO        167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n3 R2-D2         96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\n5 Leia Org…    150    49 brown      light      brown           19   fema… femin…\n6 Owen Lars    178   120 brown, gr… light      blue            52   male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\n\n\n0.1.1 Star Wars visuals\nWhat species are present on each planet?\nCreate a bar plot where the x axis equals homeworlds and the y axis show the number of different species on each planet."
  },
  {
    "objectID": "basic-plots.html#go-to-learn-r-section-on-website-from-here.",
    "href": "basic-plots.html#go-to-learn-r-section-on-website-from-here.",
    "title": "Basic plots",
    "section": "4 go to Learn R section on website from here.",
    "text": "4 go to Learn R section on website from here."
  },
  {
    "objectID": "index.html#tentative-schedule",
    "href": "index.html#tentative-schedule",
    "title": "Welcome",
    "section": "Tentative schedule",
    "text": "Tentative schedule\n\n9:00 AM\n\nOrientation in RStudio & introduction to R\nBasic syntax\nData classes & data frames\n\n9:55 - 10:00 AM 5 min break\n10:00 AM\n\nData classes & data frames\nR packages\nData import/export\n\n11:00-11:10 AM 10 min break\n11:15 AM\n\nIntroduction to tidyverse\nContinued tidyverse introduction\n\n12:00 - 1:00 PM lunch break (1 hour) & course check in\n1:00 PM\n\nTidyverse & Star Wars\nWorking with microbiome data\nIntro to plotting\n*Data visualization practices\n\n2:00 - 2:05 PM 5 min break\n2:05\n\nIntro to plotting\n*Ordination & clustering\n*Incorporate metadata\n\n3:05 - 3:15 PM 10 min break\n4:15 PM\n\n*Data visualization practices\n*Data management practices\n\n*tentative topic"
  },
  {
    "objectID": "tidyverse-intro.html#use-tidyverse-to-compile-the-asv-data",
    "href": "tidyverse-intro.html#use-tidyverse-to-compile-the-asv-data",
    "title": "Tidyverse",
    "section": "5 Use tidyverse to compile the ASV data",
    "text": "5 Use tidyverse to compile the ASV data\n\nhead(asv_long)\nhead(metadata)\nunique(metadata$SAMPLETYPE)\n\n# Below, pipe in code that will join the metadata with the ASV data. \n## Then isolate samples that were only from the Vent environment. \n\n# asv_long &lt;- asv_table %&gt;% \n  # pivot_longer(starts_with(\"Gorda\"))\n\n\n5.1 Activity\n\nSubset the ASV data so that each ASV has greater than or equal to 100 sequences."
  },
  {
    "objectID": "asvdata.html#compile-asv-and-metadata",
    "href": "asvdata.html#compile-asv-and-metadata",
    "title": "ASV data",
    "section": "1 Compile ASV and metadata",
    "text": "1 Compile ASV and metadata\n\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# head(metadata)\nasv_long &lt;- asv_table %&gt;%\n  pivot_longer(starts_with(\"Gorda\"), names_to = \"SAMPLEID\") %&gt;% \n  left_join(metadata %&gt;% select(SAMPLEID = SAMPLE, everything()))\n\nJoining with `by = join_by(SAMPLEID)`\n\n# View(asv_long)"
  },
  {
    "objectID": "asvdata.html#get-temperature-data-from-data-frame",
    "href": "asvdata.html#get-temperature-data-from-data-frame",
    "title": "ASV data",
    "section": "2 Get temperature data from data frame",
    "text": "2 Get temperature data from data frame\nIsolate samples that have a temperature greater than 15 C.\n\nasv_long %&gt;% \n  filter(temp &gt; 15)\n\n# A tibble: 42,039 × 10\n   FeatureID Taxon SAMPLEID value VENT  SITE  Sample_or_Control SAMPLETYPE DEPTH\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;    &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;             &lt;chr&gt;      &lt;chr&gt;\n 1 00056209… Euka… GordaRi…     0 Cand… Gord… Sample            Vent       2730 \n 2 00056209… Euka… GordaRi…     0 Sir … Gord… Sample            Vent       2732 \n 3 00056209… Euka… GordaRi…     0 Cand… Gord… Sample            Vent       2730 \n 4 00056209… Euka… GordaRi…     0 Sir … Gord… Sample            Vent       2732 \n 5 00056209… Euka… GordaRi…     0 Mt E… Gord… Sample            Vent       2707 \n 6 00056209… Euka… GordaRi…     0 Mt E… Gord… Sample            Vent       2707 \n 7 00056209… Euka… GordaRi…     0 Sir … Gord… Sample            Vent       2732 \n 8 00056209… Euka… GordaRi…     0 Mt E… Gord… Sample            Vent       2707 \n 9 00056209… Euka… GordaRi…     0 Cand… Gord… Sample            Vent       2730 \n10 00096455… Euka… GordaRi…     0 Cand… Gord… Sample            Vent       2730 \n# ℹ 42,029 more rows\n# ℹ 1 more variable: temp &lt;dbl&gt;\n\n# Make a list of vent sites from Gorda Ridge that had a temperature greater than 15 C.\n\nWhat are the average temperatures at the vent, plume, versus background samples? And how many of each sample are there?\n\nasv_long %&gt;%"
  },
  {
    "objectID": "basic-plots.html#first-example-of-a-bar-chart-but-something-isnt-right",
    "href": "basic-plots.html#first-example-of-a-bar-chart-but-something-isnt-right",
    "title": "Basic plots",
    "section": "3.1 First, example of a bar chart but something isn’t right",
    "text": "3.1 First, example of a bar chart but something isn’t right\n\nggplot(tatooine, aes(x = species, y = height)) +\n  geom_bar(stat = \"identity\")"
  },
  {
    "objectID": "basic-plots.html#lets-address-that-question-now-but-with-a-better-graphical-representation",
    "href": "basic-plots.html#lets-address-that-question-now-but-with-a-better-graphical-representation",
    "title": "Basic plots",
    "section": "5.1 Let’s address that question now, but with a better graphical representation",
    "text": "5.1 Let’s address that question now, but with a better graphical representation\n\nggplot(tatooine, aes(x = species, y = height)) +\n  geom_boxplot()\n\n\n\n\n\n5.1.1 Boxplots in ggplot:\n\nmedian at middle\nupper/lower hinges = 1st and 3rd quartiles (25th and 75th percentiles)\nwhiskers = largest/lowest value, but maxes at 1.5 * inter-quartile range (distance from upper/lower hinges)\nOutliers are shown as points\nNOTE: varies from base R ‘boxplot()’\n\n\nggplot(tatooine, aes(x = species, y = height)) +\n  geom_boxplot() +\n  geom_point()"
  },
  {
    "objectID": "StarWars.html#star-wars-data-wrangling",
    "href": "StarWars.html#star-wars-data-wrangling",
    "title": "Star Wars data",
    "section": "4 Star wars data wrangling",
    "text": "4 Star wars data wrangling\nIsolate non-droids on Alderaan, Naboo, Endor, Kamino, and Coruscant. Based on their reported sex, is there a relationship between their heigh, planet, and species?\n\nhead(starwars)\n\n# A tibble: 6 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\n2 C-3PO        167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n3 R2-D2         96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\n5 Leia Org…    150    49 brown      light      brown           19   fema… femin…\n6 Owen Lars    178   120 brown, gr… light      blue            52   male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;\n\nunique(starwars$homeworld)\n\n [1] \"Tatooine\"       \"Naboo\"          \"Alderaan\"       \"Stewjon\"       \n [5] \"Eriadu\"         \"Kashyyyk\"       \"Corellia\"       \"Rodia\"         \n [9] \"Nal Hutta\"      \"Bestine IV\"     NA               \"Kamino\"        \n[13] \"Trandosha\"      \"Socorro\"        \"Bespin\"         \"Mon Cala\"      \n[17] \"Chandrila\"      \"Endor\"          \"Sullust\"        \"Cato Neimoidia\"\n[21] \"Coruscant\"      \"Toydaria\"       \"Malastare\"      \"Dathomir\"      \n[25] \"Ryloth\"         \"Aleen Minor\"    \"Vulpter\"        \"Troiken\"       \n[29] \"Tund\"           \"Haruun Kal\"     \"Cerea\"          \"Glee Anselm\"   \n[33] \"Iridonia\"       \"Iktotch\"        \"Quermia\"        \"Dorin\"         \n[37] \"Champala\"       \"Geonosis\"       \"Mirial\"         \"Serenno\"       \n[41] \"Concord Dawn\"   \"Zolan\"          \"Ojom\"           \"Skako\"         \n[45] \"Muunilinst\"     \"Shili\"          \"Kalee\"          \"Umbara\"        \n[49] \"Utapau\"        \n\nhomes &lt;- c(\"Alderaan\", \"Naboo\", \"Endor\", \"Kamino\", \"Coruscant\")\n\nstarwars %&gt;% \n  filter(homeworld %in% homes) %&gt;% \n  filter(species != \"Droid\") %&gt;% \n  ggplot(aes(x = species, y = height, fill = sex)) +\n    # geom_bar(stat = \"identity\", aes(fill = sex)) +\n    geom_bar(stat = \"identity\", position = \"dodge\", aes(fill = sex)) +\n    facet_grid(homeworld ~ .)"
  },
  {
    "objectID": "customize-plots.html",
    "href": "customize-plots.html",
    "title": "Customize plots",
    "section": "",
    "text": "https://shu251.github.io/r-ventures/#plotting-my-data"
  },
  {
    "objectID": "r-overview.html#integrating-across-languages",
    "href": "r-overview.html#integrating-across-languages",
    "title": "What is ‘R’?",
    "section": "3 Integrating across languages",
    "text": "3 Integrating across languages\nA major pro to using RStudio, is how the new Posit system integrates with other computer languages (python, julia, etc.). This is ideal for projects where collaborators use a variety of R and python. Additionally, the GUI of RStudio is helpful for new learners and a great way to keep files and analyses on your computer organized.\nI’ve actually created this entire website using RStudio (and Quarto within RStudio). As an example, I also use this feature to create websites for showing preliminary data and publishing alongside articles."
  },
  {
    "objectID": "benchmarks.html",
    "href": "benchmarks.html",
    "title": "Benchmarks",
    "section": "",
    "text": "Allison Horst\n\n\nPlease take the pre- and post- course surveys. It helps us improve future iterations of the course content.\n\n0.1 Pre-course survey\n\n\n0.2 Post-course survey"
  },
  {
    "objectID": "index.html#allison-horstsessions-archive",
    "href": "index.html#allison-horstsessions-archive",
    "title": "Welcome",
    "section": "Sessions archive",
    "text": "Sessions archive\nThis course is meant to evolve over time, be re-taught, and referred to in the future. See the directory introduction-to-R/sessions to find the saved code from your session."
  },
  {
    "objectID": "growthcurve.html",
    "href": "growthcurve.html",
    "title": "Growth curve",
    "section": "",
    "text": "Goal: Understand how microorganisms are counted and quantified, using samples from the natural environment and laboratory cultures."
  },
  {
    "objectID": "growthcurve.html#cell-count-data",
    "href": "growthcurve.html#cell-count-data",
    "title": "Growth curve",
    "section": "2 Cell count data",
    "text": "2 Cell count data\nTypical growth curve generation will involve collecting samples over a period of time, fixing them, and then counting them via microscopy. The formula for this:\n\\[\nCells/ml = \\frac{(MeanCellsFOV)(AreaChamber)}{(AreaFOV)(Volume)(DilutionFactor)}\n\\] \\[\nArea = µm^2\n\\] \\[\nVolume = ml\n\\] Area of Field of View(FOV) or counting grid will vary depending on the microscope you are using and the magnification. When you are preparing slides, find information on the area of the filter chamber.\n\n2.1 Import raw cell count data\n\nraw_cell_counts <- read.csv(\"r-intro-docs/raw-cell-counts.csv\")\n\nCalculate cells/ml for Sample03. Sample03 was counted at 100x magnification. The area of the funnel used to create the slide has a radius of 8E3 mm. 2 ml of Sample was fixed with formaldehyde at a final concentration of 1%, all of it was filtered onto a 0.2µm filter and stained with DAPI. The counting grid used for each FOV has an area of 1E4 µm^2.\nIsolate sample 03 as set of numbers, calculate the average\n\nsample3 <- raw_cell_counts %>%\n  select(Sample03) %>% \n  summarise(MEAN = mean(Sample03))\n\nsample3_mean <- sample3[1,1]\n\nWrite equation from above in R, define variables as R objects as needed.\n\nMean_cells_per_FOV <- sample3_mean # from average calculation above\n\nDefine other parameters\n\nArea_chamber <- (pi)*(((8E3)*(1000))^2) #µm^2\nVolume <- 2 #ml\nArea_FOV <- 1E4 #µm^2 at 100X magnification\nDilution_factor <- 0.9\n\nUse in equation:\n\n\n2.2 Activity\n\nUse the above equation and parameters to calculate cells per ml.\n\n\ncells_per_ml <- \n\n\n\n\n\n\n2.3 Activity\n\nUse the internet to figure out how to report the results in scientific format."
  },
  {
    "objectID": "growthcurve.html#apply-to-all-data",
    "href": "growthcurve.html#apply-to-all-data",
    "title": "Growth curve",
    "section": "3 Apply to all data",
    "text": "3 Apply to all data\nUse tidyverse to modify the data frame and make an output table with cells per ml for each sample.\n\nraw_cell_counts %>% \n  # Transform to long format\n  pivot_longer(cols = starts_with(\"Sample\"), names_to = \"SAMPLE\", values_to = \"CELL_per_FOV\") %>% \n  # Estimate average cells per FOV and variance for each count\n  group_by(SAMPLE) %>% \n  summarise(MEAN = mean(CELL_per_FOV), VAR = var(CELL_per_FOV)) %>% \n  # use mutate and copy above equation to calculate cells per ml\n  mutate(CELLS_PER_ML = ((MEAN)*(Area_chamber))/((Volume)*(Area_FOV)*(Dilution_factor))) %>% \n  # Option to add column with same values in scientific\n  mutate(SCI_cells_per_ml = format(CELLS_PER_ML, scientific = TRUE, digits = 3))\n\n# A tibble: 8 × 5\n  SAMPLE    MEAN   VAR  CELLS_PER_ML SCI_cells_per_ml\n  <chr>    <dbl> <dbl>         <dbl> <chr>           \n1 Sample01  13.1 24.1  146328404487. 1.46e+11        \n2 Sample02   7.9  8.32  88243846981. 8.82e+10        \n3 Sample03   2.5  6.94  27925268032. 2.79e+10        \n4 Sample04   9.3  9.79 103881997079. 1.04e+11        \n5 Sample05  15.1 19.9  168668618913. 1.69e+11        \n6 Sample06   9    5.33 100530964915. 1.01e+11        \n7 Sample07  23.3 23.1  260263498057. 2.60e+11        \n8 Sample08  11.3  8.23 126222211504. 1.26e+11        \n\n\n\n3.1 Activity\n\nExport the new table as a .csv file"
  },
  {
    "objectID": "growthcurve.html#estimate-growth-rate",
    "href": "growthcurve.html#estimate-growth-rate",
    "title": "Growth curve",
    "section": "4 Estimate growth rate",
    "text": "4 Estimate growth rate\nImport another set of cell count data and metadata. Combine to make a plot of the growth curve.\n\ncell_counts_01 <- read.csv(\"r-intro-docs/cell-count-data01.csv\")\nmetadata_01 <- read.csv(\"r-intro-docs/sample-info-data01.csv\")\n\nApply above code again to calculate cells per ml for each sample\n\n# head(cell_counts_01) # rename some of the variable so it is applicable to these new data.\ncell_counts_01 %>%\n  pivot_longer(cols = starts_with(\"X\"), names_to = \"SAMPLE\", values_to = \"CELL_per_FOV\") %>%\n  group_by(SAMPLE) %>%\n  summarise(MEAN = mean(CELL_per_FOV), VAR = var(CELL_per_FOV)) %>%\n  mutate(CELLS_PER_ML = ((MEAN)*(Area_chamber))/((Volume)*(Area_FOV)*(Dilution_factor))) %>%\n  mutate(SCI_cells_per_ml = format(CELLS_PER_ML, scientific = TRUE, digits = 3))\n\n# A tibble: 14 × 5\n   SAMPLE  MEAN   VAR  CELLS_PER_ML SCI_cells_per_ml\n   <chr>  <dbl> <dbl>         <dbl> <chr>           \n 1 X0_A     2.2  4.18  24574235868. 2.46e+10        \n 2 X0_B     2.9  7.21  32393310917. 3.24e+10        \n 3 X1_A     1.9  4.32  21223203704. 2.12e+10        \n 4 X1_B     2.1  3.43  23457225147. 2.35e+10        \n 5 X2_A     3    5.78  33510321638. 3.35e+10        \n 6 X2_B     2.9  4.1   32393310917. 3.24e+10        \n 7 X3_A     7.3  6.23  81541782653. 8.15e+10        \n 8 X3_B     6.1  5.43  68137653998. 6.81e+10        \n 9 X4_A     8.7  7.57  97179932751. 9.72e+10        \n10 X4_B     9.2 16.8  102764986357. 1.03e+11        \n11 X5_A    10.4 10.7  116169115013. 1.16e+11        \n12 X5_B    11.3  9.34 126222211504. 1.26e+11        \n13 X6_A    10    9.78 111701072128. 1.12e+11        \n14 X6_B    11.5 10.5  128456232947. 1.28e+11        \n\n\nThere are a few data wrangling steps we need to take now. The final goal though, is to be able to look at the A vs B reps for each sample. And we need to fix the error where R places an “X” preceding a numeric (see “SAMPLE” above).\n\nhead(metadata_01)\n\n  sample_id   date hour magnification\n1       0_A 7/4/22    0           100\n2       0_B 7/4/22    0           100\n3       1_A 7/4/22    6           100\n4       1_B 7/4/22    6           100\n5       2_A 7/4/22   12           100\n6       2_B 7/4/22   12           100\n\n\n\ncell_counts_01 %>%\n  pivot_longer(cols = starts_with(\"X\"), names_to = \"SAMPLE\", values_to = \"CELL_per_FOV\") %>%\n  group_by(SAMPLE) %>%\n  summarise(MEAN = mean(CELL_per_FOV), VAR = var(CELL_per_FOV)) %>%\n  mutate(CELLS_PER_ML = ((MEAN)*(Area_chamber))/((Volume)*(Area_FOV)*(Dilution_factor))) %>%\n  mutate(SCI_cells_per_ml = format(CELLS_PER_ML, scientific = TRUE, digits = 3)) %>% \n  # Fix SAMPLE names and separate into samples and replicates\n  separate(SAMPLE, into = c(\"SAMPLE_NAME\", \"REP\"), sep = \"_\", remove = FALSE) %>% \n  mutate(SAMPLE = gsub(\"X\",\"\", SAMPLE)) # edits the SAMPLE cell.\n\n# A tibble: 14 × 7\n   SAMPLE SAMPLE_NAME REP    MEAN   VAR  CELLS_PER_ML SCI_cells_per_ml\n   <chr>  <chr>       <chr> <dbl> <dbl>         <dbl> <chr>           \n 1 0_A    X0          A       2.2  4.18  24574235868. 2.46e+10        \n 2 0_B    X0          B       2.9  7.21  32393310917. 3.24e+10        \n 3 1_A    X1          A       1.9  4.32  21223203704. 2.12e+10        \n 4 1_B    X1          B       2.1  3.43  23457225147. 2.35e+10        \n 5 2_A    X2          A       3    5.78  33510321638. 3.35e+10        \n 6 2_B    X2          B       2.9  4.1   32393310917. 3.24e+10        \n 7 3_A    X3          A       7.3  6.23  81541782653. 8.15e+10        \n 8 3_B    X3          B       6.1  5.43  68137653998. 6.81e+10        \n 9 4_A    X4          A       8.7  7.57  97179932751. 9.72e+10        \n10 4_B    X4          B       9.2 16.8  102764986357. 1.03e+11        \n11 5_A    X5          A      10.4 10.7  116169115013. 1.16e+11        \n12 5_B    X5          B      11.3  9.34 126222211504. 1.26e+11        \n13 6_A    X6          A      10    9.78 111701072128. 1.12e+11        \n14 6_B    X6          B      11.5 10.5  128456232947. 1.28e+11        \n\n\nCombine with metadata\n\ncell_counts_01 %>%\n  pivot_longer(cols = starts_with(\"X\"), names_to = \"SAMPLE\", values_to = \"CELL_per_FOV\") %>%\n  group_by(SAMPLE) %>%\n  summarise(MEAN = mean(CELL_per_FOV), VAR = var(CELL_per_FOV)) %>%\n  mutate(CELLS_PER_ML = ((MEAN)*(Area_chamber))/((Volume)*(Area_FOV)*(Dilution_factor))) %>%\n  mutate(SCI_cells_per_ml = format(CELLS_PER_ML, scientific = TRUE, digits = 3)) %>% \n  separate(SAMPLE, into = c(\"SAMPLE_NAME\", \"REP\"), sep = \"_\", remove = FALSE) %>% \n  mutate(SAMPLE = gsub(\"X\",\"\", SAMPLE)) %>% \n  # Use 'left_join' to line up the metadata. SAMPLE column matches \"sample_id\" in the metadata df\n  left_join(metadata_01, by = c(\"SAMPLE\" = \"sample_id\"))\n\n# A tibble: 14 × 10\n   SAMPLE SAMPLE_NAME REP    MEAN   VAR CELLS_PER_ML SCI_c…¹ date   hour magni…²\n   <chr>  <chr>       <chr> <dbl> <dbl>        <dbl> <chr>   <chr> <int>   <int>\n 1 0_A    X0          A       2.2  4.18      2.46e10 2.46e+… 7/4/…     0     100\n 2 0_B    X0          B       2.9  7.21      3.24e10 3.24e+… 7/4/…     0     100\n 3 1_A    X1          A       1.9  4.32      2.12e10 2.12e+… 7/4/…     6     100\n 4 1_B    X1          B       2.1  3.43      2.35e10 2.35e+… 7/4/…     6     100\n 5 2_A    X2          A       3    5.78      3.35e10 3.35e+… 7/4/…    12     100\n 6 2_B    X2          B       2.9  4.1       3.24e10 3.24e+… 7/4/…    12     100\n 7 3_A    X3          A       7.3  6.23      8.15e10 8.15e+… 7/5/…    18     100\n 8 3_B    X3          B       6.1  5.43      6.81e10 6.81e+… 7/5/…    18     100\n 9 4_A    X4          A       8.7  7.57      9.72e10 9.72e+… 7/5/…    24     100\n10 4_B    X4          B       9.2 16.8       1.03e11 1.03e+… 7/5/…    24     100\n11 5_A    X5          A      10.4 10.7       1.16e11 1.16e+… 7/5/…    30     100\n12 5_B    X5          B      11.3  9.34      1.26e11 1.26e+… 7/5/…    30     100\n13 6_A    X6          A      10    9.78      1.12e11 1.12e+… 7/6/…    36     100\n14 6_B    X6          B      11.5 10.5       1.28e11 1.28e+… 7/6/…    36     100\n# … with abbreviated variable names ¹​SCI_cells_per_ml, ²​magnification\n\n\nNow we have a lot of data in our table! Since these were replicate samples, A and B, we should save a summary table with the average across replicates and other important information\n\nsummary_table_01 <- cell_counts_01 %>%\n  pivot_longer(cols = starts_with(\"X\"), names_to = \"SAMPLE\", values_to = \"CELL_per_FOV\") %>%\n  group_by(SAMPLE) %>%\n  summarise(MEAN = mean(CELL_per_FOV), VAR = var(CELL_per_FOV)) %>%\n  mutate(CELLS_PER_ML = ((MEAN)*(Area_chamber))/((Volume)*(Area_FOV)*(Dilution_factor))) %>%\n  mutate(SCI_cells_per_ml = format(CELLS_PER_ML, scientific = TRUE, digits = 3)) %>% \n  separate(SAMPLE, into = c(\"SAMPLE_NAME\", \"REP\"), sep = \"_\", remove = FALSE) %>% \n  mutate(SAMPLE = gsub(\"X\",\"\", SAMPLE)) %>% \n  left_join(metadata_01, by = c(\"SAMPLE\" = \"sample_id\")) %>% \n  select(-REP, -SAMPLE) %>% #remove columns with information on the replicates\n  group_by(SAMPLE_NAME, hour, date) %>% \n  summarise(CELL_COUNT_sci = format(mean(CELLS_PER_ML), scientific = TRUE, digits = 3),\n            CELL_COUNT = mean(CELLS_PER_ML))\n\n`summarise()` has grouped output by 'SAMPLE_NAME', 'hour'. You can override\nusing the `.groups` argument.\n\nwrite_csv(summary_table_01, file = \"table_01.csv\", quote = c(\"none\"))\n\n\n4.0.1 Plot results\n\nggplot(summary_table_01, aes(x = hour, y = CELL_COUNT)) +\n  geom_point()\n\n\n\n\nRepeat cell count\n\ncell_counts_01 %>%\n  pivot_longer(cols = starts_with(\"X\"), names_to = \"SAMPLE\", values_to = \"CELL_per_FOV\") %>%\n  group_by(SAMPLE) %>%\n  summarise(MEAN = mean(CELL_per_FOV), VAR = var(CELL_per_FOV)) %>%\n  mutate(CELLS_PER_ML = ((MEAN)*(Area_chamber))/((Volume)*(Area_FOV)*(Dilution_factor))) %>%\n  mutate(SCI_cells_per_ml = format(CELLS_PER_ML, scientific = TRUE, digits = 3)) %>% \n  separate(SAMPLE, into = c(\"SAMPLE_NAME\", \"REP\"), sep = \"_\", remove = FALSE) %>% \n  mutate(SAMPLE = gsub(\"X\",\"\", SAMPLE)) %>% \n  left_join(metadata_01, by = c(\"SAMPLE\" = \"sample_id\")) %>% \n  #\n  ggplot(aes(x = hour, y = CELLS_PER_ML, fill = REP)) +\n  geom_point() +\n  geom_line() +\n  scale_y_log10()\n\n\n\n\nModify plot theme:\n\n## Data wrangling\ncell_counts_01 %>%\n  pivot_longer(cols = starts_with(\"X\"), names_to = \"SAMPLE\", values_to = \"CELL_per_FOV\") %>%\n  group_by(SAMPLE) %>%\n  summarise(MEAN = mean(CELL_per_FOV), VAR = var(CELL_per_FOV)) %>%\n  mutate(CELLS_PER_ML = ((MEAN)*(Area_chamber))/((Volume)*(Area_FOV)*(Dilution_factor))) %>%\n  mutate(SCI_cells_per_ml = format(CELLS_PER_ML, scientific = TRUE, digits = 3)) %>% \n  separate(SAMPLE, into = c(\"SAMPLE_NAME\", \"REP\"), sep = \"_\", remove = FALSE) %>% \n  mutate(SAMPLE = gsub(\"X\",\"\", SAMPLE)) %>% \n  left_join(metadata_01, by = c(\"SAMPLE\" = \"sample_id\")) %>% \n# Ggplot code\n  ggplot(aes(x = hour, y = CELLS_PER_ML, fill = REP)) +\n  geom_line(aes(linetype = REP)) +\n  geom_point(shape = 21, color = \"black\", size = 3) +\n  theme_bw() +\n  labs(x = \"Time (hours)\", y = \"Cells/ml\") +\n  theme(axis.text = element_text(size = 11, color = \"black\"),\n        legend.title = element_blank()) +\n  scale_y_log10()\n\n\n\n\n\nggplot(summary_table_01, aes(x = hour, y = CELL_COUNT)) +\n  geom_line() +\n  geom_point(shape = 21, color = \"black\", size = 3, fill = \"lightpink\") +\n  theme_bw() +\n  labs(x = \"Time (hours)\", y = \"Cells/ml\") +\n  theme(axis.text = element_text(size = 11, color = \"black\"),\n        legend.title = element_blank()) +\n  scale_y_log10()\n\n\n\n\n\n\n4.0.2 Growth rate & Generation time\nIn Excel, calculate growth rate of the monoculture and the generation time.\nGeneration time: internal of time required for the cells to divide (G). t = time interval, B = cells at T0 and b = cells at T1, n = number of times the cell population doubles during time interval.\n\\[\nG = \\frac{t}{n}\n\\] \\[\nb = (B)(2^n)\n\\] \\[\nn = \\frac{logb - logB}{log2}\n\\] \\[\nG = \\frac{t}{3.3(log\\frac{b}{B})}\n\\] We can assume that the best time points to capture generation time during exponential growth are at hour 12 and 30. Calculate the generation time in Excel and then repeat it in R here.\n\nb <- summary_table_01 %>% filter(hour == 30)\nb$CELL_COUNT\n\n[1] 121195663258\n\nB <- summary_table_01 %>% filter(hour == 12)\nB$CELL_COUNT\n\n[1] 32951816278\n\nG_min <- ((30-12)*60)/(3.3*(log10(((b$CELL_COUNT)/(B$CELL_COUNT)))))\nG_min\n\n[1] 578.6214\n\n\nThe gradient of the slope if the growth rate. Isolate 3-4 points from the exponential growth phase. In this case, it is at hours 12, 18, 24, and 30. > In base R, log() calculates the natural logarithm.\n\nexp_hour <- c(12, 18, 24, 30)\nexp_growth <- summary_table_01 %>% \n  filter(hour %in% exp_hour) %>% \n  mutate(NAT_LOG = log(CELL_COUNT))\n\nUse linear regression and output thee coefficients to determine growth rate.\n\nlm(NAT_LOG ~ hour, exp_growth)\n\n\nCall:\nlm(formula = NAT_LOG ~ hour, data = exp_growth)\n\nCoefficients:\n(Intercept)         hour  \n   23.55762      0.06994  \n\nmodel_output_coefficients <- coef(lm(NAT_LOG ~ hour, exp_growth))\n# model_output_coefficients\nslope = model_output_coefficients[2]\n\nGrowth rate (in hours)\n\nslope\n\n      hour \n0.06994376 \n\n\n\n\n4.0.3 Activity\n\nDoes bacteria 2 grow faster at higher temperatures? Plot growth curves using provided data"
  },
  {
    "objectID": "StarWars.html#explore-the-star-wars-data-in-tidyverse",
    "href": "StarWars.html#explore-the-star-wars-data-in-tidyverse",
    "title": "Star Wars data",
    "section": "",
    "text": "library(tidyverse)\nhead(starwars)\n\n# A tibble: 6 × 14\n  name      height  mass hair_color skin_color eye_color birth_year sex   gender\n  &lt;chr&gt;      &lt;int&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; \n1 Luke Sky…    172    77 blond      fair       blue            19   male  mascu…\n2 C-3PO        167    75 &lt;NA&gt;       gold       yellow         112   none  mascu…\n3 R2-D2         96    32 &lt;NA&gt;       white, bl… red             33   none  mascu…\n4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\n5 Leia Org…    150    49 brown      light      brown           19   fema… femin…\n6 Owen Lars    178   120 brown, gr… light      blue            52   male  mascu…\n# ℹ 5 more variables: homeworld &lt;chr&gt;, species &lt;chr&gt;, films &lt;list&gt;,\n#   vehicles &lt;list&gt;, starships &lt;list&gt;"
  },
  {
    "objectID": "tidyverse-intro.html#import-and-explore-with-tidyverse",
    "href": "tidyverse-intro.html#import-and-explore-with-tidyverse",
    "title": "Tidyverse",
    "section": "",
    "text": "Lets use tidyverse to modify the pizza data.\n\nhead(pizza)\n\nIntroducing the pipe operator. A key for working in tidyverse. Some fun background it.\n\npizza %&gt;% select(type)\ntypes_of_pizza &lt;- pizza %&gt;% select(type)\ntypes_of_pizza_char &lt;- as.character(pizza %&gt;% select(type))\n\nSelect can also be used to re-name a column or remove a column.\n\npizza_new &lt;- pizza %&gt;% \n  select(style = type, everything(), -X)"
  },
  {
    "objectID": "clustering.html",
    "href": "clustering.html",
    "title": "Cluster analysis",
    "section": "",
    "text": "Too many dimensions\nNeed to sort and group\nTest a hypothesis | Explore hypotheses\n\n\n\nOrdinations - taking complex data and working to present it in 2-3 dimensions, we are placing a new coordinate system (fitting) in place. Principle Component Analysis (PCA) works to generate this coordinate system that is most appropriate for your data. Evaluated based on the eigen decomposition from sample covariance matrix. (Eigenvectors = principle axes)\n\n\n\nReferences / recommended reading:\n\nTHIS TUTORIAL: Coenen AR, Hu SK, Luo E, Muratore D, Weitz JS. A Primer for Microbiome Time-Series Analysis. Front Genet. 2020 Apr 21;11:310.\nGloor, G. B., Macklaim, J. M., Pawlowsky-Glahn, V. & Egozcue, J. J. Microbiome Datasets Are Compositional: And This Is Not Optional. Front. Microbiol. 8, 57–6 (2017).\nWeiss, S. et al. Normalization and microbial differential abundance strategies depend upon data characteristics. Microbiome 5, 1–18 (2017).\nMcMurdie, P. J. & Holmes, S. Waste Not, Want Not: Why Rarefying Microbiome Data Is Inadmissible. PLoS Comput Biol 10, e1003531 (2014).\nSilverman JD, Washburne AD, Mukherjee S, David LA. A phylogenetic transform enhances analysis of compositional microbiota data. eLife. 2017 Feb 15;6:e21887."
  },
  {
    "objectID": "clustering.html#set-up-preliminary-environment",
    "href": "clustering.html#set-up-preliminary-environment",
    "title": "Cluster analysis",
    "section": "Set up preliminary environment",
    "text": "Set up preliminary environment\n\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(compositions)\n\nWarning: package 'compositions' was built under R version 4.2.3\n\n\nWelcome to compositions, a package for compositional data analysis.\nFind an intro with \"? compositions\"\n\n\nAttaching package: 'compositions'\n\nThe following objects are masked from 'package:stats':\n\n    anova, cor, cov, dist, var\n\nThe following object is masked from 'package:graphics':\n\n    segments\n\nThe following objects are masked from 'package:base':\n\n    %*%, norm, scale, scale.default"
  },
  {
    "objectID": "correlation_linearregression.html",
    "href": "correlation_linearregression.html",
    "title": "Correlation & Linear regression",
    "section": "",
    "text": "Explore association between two variables, assign a strength to this relationship.\nAre variables changing or shifting in the same direction as one another (positive) or in opposition (negative)?\nBe careful of assuming causal relationships. Causation != correlation.\nAcknowledge what is not measured or observed"
  },
  {
    "objectID": "correlation_linearregression.html#with-example-data",
    "href": "correlation_linearregression.html#with-example-data",
    "title": "Correlation & Linear regression",
    "section": "With example data",
    "text": "With example data\nLet’s explore how to run base code for linear regressions in R.\n\n# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\ndata(package = \"palmerpenguins\") # Get information on it\n\nExplore some relationships that might exist in this data\n\npenguins %&gt;% \n  group_by(species) %&gt;% \n  summarize(across(where(is.numeric), mean, na.rm = TRUE)) %&gt;% \n  head\n\nWarning: There was 1 warning in `summarize()`.\nℹ In argument: `across(where(is.numeric), mean, na.rm = TRUE)`.\nℹ In group 1: `species = Adelie`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n\n\n# A tibble: 3 × 6\n  species   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g  year\n  &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt; &lt;dbl&gt;\n1 Adelie              38.8          18.3              190.       3701. 2008.\n2 Chinstrap           48.8          18.4              196.       3733. 2008.\n3 Gentoo              47.5          15.0              217.       5076. 2008.\n\n\n\npenguins %&gt;% \n  ggplot(aes(x = body_mass_g, y = flipper_length_mm)) +\n    geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\nRe-plot, but show species.\nAre our variable normally distributed?\n\n# hist(penguins$flipper_length_mm)\n# hist(penguins$body_mass_g)\n\nAre things correlated?\n\ncor.test(penguins$body_mass_g, penguins$flipper_length_mm, method = \"pearson\")\n\n\n    Pearson's product-moment correlation\n\ndata:  penguins$body_mass_g and penguins$flipper_length_mm\nt = 32.722, df = 340, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.843041 0.894599\nsample estimates:\n      cor \n0.8712018 \n\n\np-value: probability the true correlation is not equal to 0. There is a correlation of some kind.\nWith 95% confidence, the correlation value is between 0.84 and 0.89. We estimate it to be 0.87\n\ncor.test(penguins$body_mass_g, penguins$flipper_length_mm, method = \"spearman\")\n\nWarning in cor.test.default(penguins$body_mass_g, penguins$flipper_length_mm, :\nCannot compute exact p-value with ties\n\n\n\n    Spearman's rank correlation rho\n\ndata:  penguins$body_mass_g and penguins$flipper_length_mm\nS = 1066875, p-value &lt; 2.2e-16\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.8399741 \n\n\nAgain, a strong correlation is shown. p-value is significant (low) and rho is closer to 1, so there appears to be a strong correlation to explore."
  },
  {
    "objectID": "correlation_linearregression.html#regressions-in-r",
    "href": "correlation_linearregression.html#regressions-in-r",
    "title": "Correlation & Linear regression",
    "section": "Regressions in R",
    "text": "Regressions in R\nAnother method to compare between two sets of variables in our data. When we see a strong correlation (from above), we can use the linear model function to explore this relationship further.\n\n?lm()\n\nlm(response ~ terms, data = df)\nHow well does terms explain response in our data(df)?\nCould also be viewed as lm(y ~ x, data = df). How well does x explain y?\nFor different sizes of penguins, how well does their body mass (in grams) explain the flipper length observed (in mm)?\n\nregression_output &lt;- lm(flipper_length_mm ~ body_mass_g, data = penguins)\n\n# View results:\nsummary(regression_output)\n\n\nCall:\nlm(formula = flipper_length_mm ~ body_mass_g, data = penguins)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-23.7626  -4.9138   0.9891   5.1166  16.6392 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 1.367e+02  1.997e+00   68.47   &lt;2e-16 ***\nbody_mass_g 1.528e-02  4.668e-04   32.72   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.913 on 340 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.759, Adjusted R-squared:  0.7583 \nF-statistic:  1071 on 1 and 340 DF,  p-value: &lt; 2.2e-16\n\n\nExplanation: Residuals: distance of each point from model output or prediction\nCoeffienct: definitions of our relationship - where Estimate reports the slop and intercept of the linear regression (y = mx + b). Therefore:\nflipper length = (0.0152 x body mass) + 136.7\n\nDiagnose linear model output\nWe can explore the results visually. The output from plot() provides a lot of plots to diagnose our lm output.\n\nplot(regression_output)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFitted vs. residuals - does the linearity assumption hold? When the red line is close to the dashed line, the mean residual at each point is close to 0. When we look across the x-axis, if the trends are similarly spread out, we can check of homoskedasticity as true. We will see extreme outliers at the ends of the plots here as well.\nIn our penguin dataset, there are violations of the linearity assumption.\nResidulas vs. Leverage - this will help us determine the influential data points for the model.\nTO DO\n\nAdd interaction terms\nShow use of broom"
  },
  {
    "objectID": "clustering.html#ordinations",
    "href": "clustering.html#ordinations",
    "title": "Cluster analysis",
    "section": "",
    "text": "Ordinations - taking complex data and working to present it in 2-3 dimensions, we are placing a new coordinate system (fitting) in place. Principle Component Analysis (PCA) works to generate this coordinate system that is most appropriate for your data. Evaluated based on the eigen decomposition from sample covariance matrix. (Eigenvectors = principle axes)"
  },
  {
    "objectID": "clustering.html#background",
    "href": "clustering.html#background",
    "title": "Cluster analysis",
    "section": "",
    "text": "References / recommended reading:\n\nTHIS TUTORIAL: Coenen AR, Hu SK, Luo E, Muratore D, Weitz JS. A Primer for Microbiome Time-Series Analysis. Front Genet. 2020 Apr 21;11:310.\nGloor, G. B., Macklaim, J. M., Pawlowsky-Glahn, V. & Egozcue, J. J. Microbiome Datasets Are Compositional: And This Is Not Optional. Front. Microbiol. 8, 57–6 (2017).\nWeiss, S. et al. Normalization and microbial differential abundance strategies depend upon data characteristics. Microbiome 5, 1–18 (2017).\nMcMurdie, P. J. & Holmes, S. Waste Not, Want Not: Why Rarefying Microbiome Data Is Inadmissible. PLoS Comput Biol 10, e1003531 (2014).\nSilverman JD, Washburne AD, Mukherjee S, David LA. A phylogenetic transform enhances analysis of compositional microbiota data. eLife. 2017 Feb 15;6:e21887."
  },
  {
    "objectID": "clustering.html#isometric",
    "href": "clustering.html#isometric",
    "title": "Cluster analysis",
    "section": "Isometric",
    "text": "Isometric\n\ngorda_ilr &lt;- data.frame(compositions::ilr(t(asv_df)))\ncov_ilr &lt;- as.matrix(gorda_ilr) %*% t(gorda_ilr)\ndet_ilr &lt;- det(cov_ilr)\ndet_ilr\n\n[1] 3.865625e+40\n\n\nprcomp() - Principle Component Analysis. Input is a data matrix and results are an R class “prcomp”.\nExplore the covariance after doing the transformation.\n\nilr_pca &lt;- prcomp(gorda_ilr)\nclass(ilr_pca)\n\n[1] \"prcomp\"\n\nilr_pca$sdev \n\n [1] 4.943846e+00 4.598564e+00 4.109057e+00 3.786362e+00 3.491110e+00\n [6] 3.403491e+00 3.330047e+00 3.148878e+00 3.065696e+00 3.008236e+00\n[11] 2.991925e+00 2.881199e+00 2.785096e+00 2.739541e+00 2.602067e+00\n[16] 2.191981e+00 2.084322e+00 2.494195e-15\n\n\nfollow up reading on prcomp\n\n# Visual representation - screeplot\nlograt_variances &lt;- as.data.frame(ilr_pca$sdev^2/sum(ilr_pca$sdev^2)) %&gt;% #Extract axes\n  # Format to plot\n  select(PercVar = 'ilr_pca$sdev^2/sum(ilr_pca$sdev^2)') %&gt;% \n  rownames_to_column(var = \"PCaxis\") %&gt;% \n  data.frame\n\n\n# Plot screeplot\nggplot(lograt_variances, aes(x = as.numeric(PCaxis), y = PercVar)) + \n  geom_bar(stat = \"identity\", fill = \"grey\", color = \"black\") +\n  theme_minimal() +\n  theme(axis.title = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.text.y = element_text(color = \"black\", face = \"bold\"),\n        axis.text.x = element_blank()) +\n  labs(x = \"PC axis\", y = \"% Variance\", title = \"Log-Ratio PCA Screeplot\")"
  },
  {
    "objectID": "clustering.html#center-log-ratio",
    "href": "clustering.html#center-log-ratio",
    "title": "Cluster analysis",
    "section": "Center log ratio",
    "text": "Center log ratio\n\ngorda_clr &lt;- data.frame(compositions::clr(t(asv_df)))\ncov_clr &lt;- as.matrix(gorda_clr) %*% t(gorda_clr)\ndet_clr &lt;- det(cov_clr)\ndet_clr\n\n[1] 3.865625e+40\n\n\n\nclr_pca &lt;- prcomp(gorda_clr)\n\nclr_variances &lt;- as.data.frame(clr_pca$sdev^2/sum(clr_pca$sdev^2)) %&gt;% #Extract axes\n  # Format to plot\n  select(PercVar = 'clr_pca$sdev^2/sum(clr_pca$sdev^2)') %&gt;% \n  rownames_to_column(var = \"PCaxis\") %&gt;% \n  data.frame\n\n# Plot screeplot\nggplot(clr_variances, aes(x = as.numeric(PCaxis), y = PercVar)) + \n  geom_bar(stat = \"identity\", fill = \"grey\", color = \"black\") +\n  theme_minimal() +\n  theme(axis.title = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.text.y = element_text(color = \"black\", face = \"bold\"),\n        axis.text.x = element_blank()) +\n  labs(x = \"PC axis\", y = \"% Variance\", title = \"Log-Ratio PCA Screeplot\")"
  },
  {
    "objectID": "clustering.html#pca",
    "href": "clustering.html#pca",
    "title": "Cluster analysis",
    "section": "PCA",
    "text": "PCA\nLets pick one. My favorite is always the clr.\n\nclass(clr_pca)\n\n[1] \"prcomp\"\n\n\n\n# Visualize the PCA\n# clr_pca$\nclr_pca$x #View PC values\n\n                                                PC1       PC2          PC3\nGordaRidge_Vent039_SUPRS1_2019          -7.34755619  2.038825  -3.55611685\nGordaRidge_Vent040_SUPRS2_2019          -9.78346635  2.460521  -0.77136671\nGordaRidge_BSW081_sterivex_2019          2.07962514 -4.778558 -10.76437040\nGordaRidge_BSW056_sterivex_2019_REPb     2.22737694 -1.902767   0.10108314\nGordaRidge_Vent088_SUPRS3_2019           3.87605353  3.451755   1.36495536\nGordaRidge_Plume001_sterivex_2019_REPa   6.06296965  9.489873   2.78762744\nGordaRidge_Plume001_sterivex_2019_REPb   3.75146642  5.235226  -0.32599025\nGordaRidge_Plume036_sterivex_2019_REPb   0.99001560 -0.296212  -3.59219046\nGordaRidge_Plume096_sterivex_2019        2.97967776 -6.241404  -4.18477088\nGordaRidge_Vent105_SUPRS9_2019           0.07257623 -5.988742   2.35039473\nGordaRidge_Vent041_SUPRS3_2019         -12.14860389  3.521967  -0.16983279\nGordaRidge_Vent086_SUPRS1_2019           3.64951152  3.100322  -0.10068334\nGordaRidge_Vent107_SUPRS11_2019          1.06017235  3.156332   0.01368227\nGordaRidge_Vent009_SUPRS1_2019           0.52621293 -3.979897   1.42542017\nGordaRidge_Vent011_SUPRS3_2019          -2.87690809 -5.211351   8.50704556\nGordaRidge_Vent106_SUPRS10_2019          2.76565484 -1.177457   0.16723692\nGordaRidge_Vent010_SUPRS2_2019           0.65328013 -5.800180   6.11206388\nGordaRidge_Vent087_SUPRS2_2019           1.46194145  2.921749   0.63581220\n                                              PC4        PC5         PC6\nGordaRidge_Vent039_SUPRS1_2019          0.3964546 -2.2023886  2.02626438\nGordaRidge_Vent040_SUPRS2_2019         -0.3044724 -1.0262251  0.63462447\nGordaRidge_BSW081_sterivex_2019        -1.3502500  1.5029580  0.09305439\nGordaRidge_BSW056_sterivex_2019_REPb   -5.6220145 -0.2051466  3.25144437\nGordaRidge_Vent088_SUPRS3_2019          5.1157454  0.5323643 -2.14997075\nGordaRidge_Plume001_sterivex_2019_REPa -6.9670423 -2.2679318  1.23433787\nGordaRidge_Plume001_sterivex_2019_REPb -3.4624252 -2.3323100  1.03280187\nGordaRidge_Plume036_sterivex_2019_REPb  2.4892839 -6.8135809 -0.73780267\nGordaRidge_Plume096_sterivex_2019      -3.3515187  3.6447424 -0.62117444\nGordaRidge_Vent105_SUPRS9_2019          3.7606049 -7.2144285  1.66918307\nGordaRidge_Vent041_SUPRS3_2019         -1.8105847  3.3349188 -0.59369830\nGordaRidge_Vent086_SUPRS1_2019          7.1864815  6.0848226  8.37502417\nGordaRidge_Vent107_SUPRS11_2019         3.0574716  1.3391157 -9.09467698\nGordaRidge_Vent009_SUPRS1_2019          0.4150761 -1.7996890  0.01737771\nGordaRidge_Vent011_SUPRS3_2019         -1.7174662  2.3221287  0.71074433\nGordaRidge_Vent106_SUPRS10_2019        -1.8033439  4.1655997 -3.90266846\nGordaRidge_Vent010_SUPRS2_2019         -0.5901349  0.5158007 -0.78328821\nGordaRidge_Vent087_SUPRS2_2019          4.5581348  0.4192496 -1.16157683\n                                              PC7        PC8        PC9\nGordaRidge_Vent039_SUPRS1_2019         -0.6496601  1.2116813  1.0316595\nGordaRidge_Vent040_SUPRS2_2019         -0.8123972 -3.9730101  2.3368197\nGordaRidge_BSW081_sterivex_2019         1.6495161 -1.2982620  1.8034577\nGordaRidge_BSW056_sterivex_2019_REPb   -9.7037835 -2.3041612 -4.1565779\nGordaRidge_Vent088_SUPRS3_2019          0.8954461 -4.8253730 -6.9645840\nGordaRidge_Plume001_sterivex_2019_REPa  3.8530669  1.1980786  1.3538730\nGordaRidge_Plume001_sterivex_2019_REPb  1.2552959  0.5515430  0.4533167\nGordaRidge_Plume036_sterivex_2019_REPb -2.9588041 -0.1674855  2.9099127\nGordaRidge_Plume096_sterivex_2019       4.9698549 -1.4472277 -1.5997091\nGordaRidge_Vent105_SUPRS9_2019          3.4796731  4.0959930 -2.5632325\nGordaRidge_Vent041_SUPRS3_2019          2.1123551  3.2190234 -4.7821407\nGordaRidge_Vent086_SUPRS1_2019         -1.4275844  3.4147165  1.8797009\nGordaRidge_Vent107_SUPRS11_2019        -3.7286760  2.8564454  2.1853732\nGordaRidge_Vent009_SUPRS1_2019         -0.3800148  1.5659092 -0.4321429\nGordaRidge_Vent011_SUPRS3_2019          0.8654687 -3.5576759  5.4628419\nGordaRidge_Vent106_SUPRS10_2019        -1.3328842  4.3215328  1.0346954\nGordaRidge_Vent010_SUPRS2_2019         -0.2395470  1.0767421 -1.0489931\nGordaRidge_Vent087_SUPRS2_2019          2.1526746 -5.9384699  1.0957297\n                                              PC10       PC11          PC12\nGordaRidge_Vent039_SUPRS1_2019          0.01535337 -1.1634965  0.2235986343\nGordaRidge_Vent040_SUPRS2_2019         -1.95647032 -0.9940588 -1.9643917302\nGordaRidge_BSW081_sterivex_2019         5.75409064 -1.8446211  4.2643158379\nGordaRidge_BSW056_sterivex_2019_REPb    1.20936967 -1.2942677 -2.4569071568\nGordaRidge_Vent088_SUPRS3_2019         -0.77754544 -0.3950154  3.1214387806\nGordaRidge_Plume001_sterivex_2019_REPa  1.08282457  0.8275677  0.2959269921\nGordaRidge_Plume001_sterivex_2019_REPb  0.64783048 -0.5440563  0.0002457426\nGordaRidge_Plume036_sterivex_2019_REPb -5.33213279  5.0047730  2.7424122868\nGordaRidge_Plume096_sterivex_2019      -3.89174671  4.2046086 -5.8869335105\nGordaRidge_Vent105_SUPRS9_2019          1.71076984 -4.0672039 -3.3636827701\nGordaRidge_Vent041_SUPRS3_2019          0.58113298  1.7661330  1.4729487287\nGordaRidge_Vent086_SUPRS1_2019         -0.01214043  1.6306516 -0.8921549723\nGordaRidge_Vent107_SUPRS11_2019         4.48645464  2.0366114 -4.1584271089\nGordaRidge_Vent009_SUPRS1_2019          0.17666623  0.4603721  0.4429477192\nGordaRidge_Vent011_SUPRS3_2019          1.28502969 -0.8285966  0.6749658369\nGordaRidge_Vent106_SUPRS10_2019        -6.51068832 -6.6851995  2.4088082159\nGordaRidge_Vent010_SUPRS2_2019          1.48331167  4.6210628  4.5566181824\nGordaRidge_Vent087_SUPRS2_2019          0.04789023 -2.7352643 -1.4817297087\n                                              PC13       PC14         PC15\nGordaRidge_Vent039_SUPRS1_2019         -5.68665638  2.1787230  6.535366012\nGordaRidge_Vent040_SUPRS2_2019         -3.38188958 -3.5948384 -5.932214804\nGordaRidge_BSW081_sterivex_2019         0.98044495 -1.2518574 -1.268814385\nGordaRidge_BSW056_sterivex_2019_REPb    1.48196913  0.9411710  0.006596466\nGordaRidge_Vent088_SUPRS3_2019         -1.40741855 -4.5512525  2.119703180\nGordaRidge_Plume001_sterivex_2019_REPa -0.07556898 -0.9599484 -0.656486651\nGordaRidge_Plume001_sterivex_2019_REPb -0.46728117  0.6884792  0.311408619\nGordaRidge_Plume036_sterivex_2019_REPb  4.12943434 -0.2828451  0.385460907\nGordaRidge_Plume096_sterivex_2019      -0.99076484 -0.1619406  1.125446552\nGordaRidge_Vent105_SUPRS9_2019          1.33330724 -1.2855604 -1.280996955\nGordaRidge_Vent041_SUPRS3_2019          5.21314977  1.2292350 -0.215399263\nGordaRidge_Vent086_SUPRS1_2019          0.16636207 -0.9491026 -0.851348000\nGordaRidge_Vent107_SUPRS11_2019        -0.34427500 -1.1525529  0.376080682\nGordaRidge_Vent009_SUPRS1_2019         -1.00498005  0.7772886  0.483868271\nGordaRidge_Vent011_SUPRS3_2019          3.09214727 -2.8832234  3.824122932\nGordaRidge_Vent106_SUPRS10_2019        -0.40549871  0.1852621 -0.699787996\nGordaRidge_Vent010_SUPRS2_2019         -4.58670531  3.3457571 -3.172279201\nGordaRidge_Vent087_SUPRS2_2019          1.95422379  7.7272056 -1.090726366\n                                              PC16         PC17          PC18\nGordaRidge_Vent039_SUPRS1_2019          1.63642664 -0.248209627 -8.612543e-16\nGordaRidge_Vent040_SUPRS2_2019         -0.53825194 -0.152872328  4.749165e-16\nGordaRidge_BSW081_sterivex_2019         0.43835951 -0.306146844 -5.943560e-15\nGordaRidge_BSW056_sterivex_2019_REPb    0.99398728 -0.229467133 -2.705265e-15\nGordaRidge_Vent088_SUPRS3_2019          0.06397473 -0.006958601  2.531431e-15\nGordaRidge_Plume001_sterivex_2019_REPa  2.37638326 -3.383837370 -5.453178e-16\nGordaRidge_Plume001_sterivex_2019_REPb -4.43748953  6.013834409  1.233533e-15\nGordaRidge_Plume036_sterivex_2019_REPb  0.92873652  0.198739865  2.320120e-15\nGordaRidge_Plume096_sterivex_2019       0.40614102  0.299002057  4.050938e-16\nGordaRidge_Vent105_SUPRS9_2019          1.83102522  0.745362073 -4.900992e-15\nGordaRidge_Vent041_SUPRS3_2019         -0.27152441  0.099293810 -8.566571e-15\nGordaRidge_Vent086_SUPRS1_2019          0.05361615  0.033228290  4.273961e-15\nGordaRidge_Vent107_SUPRS11_2019         0.32989488  0.180694750  6.544603e-16\nGordaRidge_Vent009_SUPRS1_2019         -6.63692746 -4.731513818  1.486228e-15\nGordaRidge_Vent011_SUPRS3_2019          0.11488334  0.717191197  3.125682e-15\nGordaRidge_Vent106_SUPRS10_2019         0.60879738  0.078514800  3.747906e-15\nGordaRidge_Vent010_SUPRS2_2019          1.75224203  1.378743505  1.244700e-15\nGordaRidge_Vent087_SUPRS2_2019          0.34972537 -0.685599035  3.061172e-15\n\n\n\npca_clr_df &lt;- data.frame(clr_pca$x) %&gt;% \n  rownames_to_column(var = \"SAMPLE\") %&gt;%\n  left_join(metadata)\n\nJoining with `by = join_by(SAMPLE)`\n\n# head(pca_clr_df)\n\nMake PCA plot\n\n# Plot PCA\nggplot(pca_clr_df) +\n  geom_point(aes(x = PC1, y = PC2, fill = VENT), size = 4, shape = 21, color = \"black\") +\n  ylab(paste0('PC2 ', round(lograt_variances[2,2]*100,2),'%')) + #Extract y axis value from variance\n  xlab(paste0('PC1 ', round(lograt_variances[1,2]*100,2),'%')) + #Extract x axis value from variance\n  scale_fill_brewer(palette = 'Dark2') +\n  ggtitle('Centered Log-Ratio PCA Ordination') +\n  coord_fixed(ratio = 1) +\n  theme_bw()\n\nWarning in RColorBrewer::brewer.pal(n, pal): n too large, allowed maximum for palette Dark2 is 8\nReturning the palette you asked for with that many colors"
  },
  {
    "objectID": "clustering.html#distance-matrix",
    "href": "clustering.html#distance-matrix",
    "title": "Cluster analysis",
    "section": "Distance matrix",
    "text": "Distance matrix\nIf we want to prioritize differences in presence/absence between samples - use Jaccard. This can be estimated from untransformed count data, and does a pretty good job considering rare taxa. Another is unweighted Unifrac that includes phylogenetic relatedness (see last week’s lesson).\n\nlibrary(vegan)\n\nLoading required package: permute\n\n\nLoading required package: lattice\n\n\nWarning: package 'lattice' was built under R version 4.2.3\n\n\nThis is vegan 2.6-4\n\nlibrary(ape)\n\nWarning: package 'ape' was built under R version 4.2.3\n\n\n\nAttaching package: 'ape'\n\n\nThe following object is masked from 'package:compositions':\n\n    balance\n\n\nThe following object is masked from 'package:dplyr':\n\n    where\n\n\n\njac_dmat &lt;- vegdist(t(asv_df),method=\"jaccard\") # Jaccard dist metric\npcoa_jac &lt;- ape::pcoa(jac_dmat) #perform PCoA\n\nWe can use the screeplot to determine if we are going in the right direction.\n\njac_variances &lt;- data.frame(pcoa_jac$values$Relative_eig) %&gt;% \n  select(PercVar = 'pcoa_jac.values.Relative_eig') %&gt;% \n  rownames_to_column(var = \"PCaxis\") %&gt;% \n  data.frame\n\n\nggplot(jac_variances, aes(x = as.numeric(PCaxis), y = PercVar)) + \n  geom_bar(stat = \"identity\", fill = \"grey\", color = \"black\") +\n  theme_minimal() +\n  theme(axis.title = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.text.y = element_text(color = \"black\", face = \"bold\"),\n        axis.text.x = element_blank()) +\n  labs(x = \"PC axis\", y = \"% Variance\", title = \"Log-Ratio PCoA Screeplot\")\n\n\n\n\n\n# Extract variances from pcoa, from jaccard calculated dist. metric\n## where samples fall among axes\npcoa_jac_df &lt;- data.frame(pcoa_jac$vectors) %&gt;% \n  rownames_to_column(var = \"TimeofDay\") %&gt;% \n  separate(TimeofDay, into = c(\"excess\", \"TimeofDay\"), sep = \"_\") %&gt;% \n  select(-excess) %&gt;% \n  data.frame\n\nWarning: Expected 2 pieces. Additional pieces discarded in 18 rows [1, 2, 3, 4, 5, 6, 7,\n8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18].\n\nhead(pcoa_jac_df)\n\n  TimeofDay      Axis.1     Axis.2       Axis.3       Axis.4       Axis.5\n1   Vent039 -0.52492059 -0.1536045  0.113692139  0.006667513  0.035742950\n2   Vent040 -0.49181112 -0.1149200  0.004884159  0.032189909 -0.003526562\n3    BSW081  0.10853811  0.1189259  0.558800724 -0.011911022 -0.167748866\n4    BSW056  0.08748897  0.1387744 -0.028790312  0.098258306 -0.136630115\n5   Vent088  0.18004918 -0.1603624 -0.144524285 -0.350573747 -0.084914185\n6  Plume001  0.26376205 -0.3999651 -0.018146584  0.305121582  0.081106838\n       Axis.6       Axis.7       Axis.8       Axis.9      Axis.10     Axis.11\n1 -0.01544891 -0.004433228  0.030720115 -0.019271666 -0.009234801  0.02814906\n2 -0.01142033 -0.028762993  0.004692959  0.016340663  0.018732244  0.01726439\n3 -0.12971769 -0.011689359 -0.053553937 -0.108859507 -0.229209617 -0.22837279\n4  0.06725256 -0.169650936  0.471033793 -0.083252615  0.209224798 -0.12967351\n5 -0.02045929 -0.023329116 -0.009141787 -0.116632751 -0.001468349  0.02776290\n6 -0.07787861 -0.035930561 -0.045017348  0.004991304 -0.015618458  0.02484168\n       Axis.12      Axis.13      Axis.14      Axis.15      Axis.16\n1 -0.051129436  0.002442582  0.272374647 -0.112912506  0.098760100\n2  0.007737317  0.003573194 -0.015728268  0.040455692 -0.198302261\n3 -0.005367321 -0.012944735 -0.024387416  0.002830477 -0.009529942\n4  0.087833422  0.020801847  0.005782566 -0.008530959  0.018583874\n5  0.022429947 -0.366930423  0.066602133  0.053671973 -0.020411635\n6 -0.000847262  0.003692100  0.008723253  0.062197523  0.204779322\n        Axis.17\n1  0.0911223335\n2 -0.2296423696\n3 -0.0126394766\n4 -0.0064544406\n5 -0.0009404165\n6 -0.1561933078\n\n# Select eigen values from dataframe, round to 4 places. These will be the axes for the 3-D plot\n# Extract variances from previously generated dataframe, round and multiply by 100 for plotting\neigenvalues&lt;-round(jac_variances[,2], digits = 4)*100\n\n# Plotly - 3-D\n# plotly::plot_ly(pcoa_jac_df, type='scatter3d', mode='markers',\n#         x=~Axis.2,y=~Axis.3,z=~Axis.1,colors=~brewer.pal(6,'Set1'),color=~TimeofDay)%&gt;%\n#   layout(font=list(size=18),\n#          title='PCoA Jaccard Distance',\n#          scene=list(xaxis=list(title=paste0('Co 2 ',eigenvalues[2],'%'),\n#                                showticklabels=FALSE,zerolinecolor='black'),\n#                     yaxis=list(title=paste0('Co 3 ',eigenvalues[3],'%'),\n#                                showticklabels=FALSE,zerolinecolor='black'),\n#                     zaxis=list(title=paste0('Co 1 ',eigenvalues[1],'%'),\n#                                showticklabels=FALSE,zerolinecolor='black')))"
  },
  {
    "objectID": "clustering.html#euclidean",
    "href": "clustering.html#euclidean",
    "title": "Cluster analysis",
    "section": "Euclidean",
    "text": "Euclidean\nPerforming the log-ratio transformation makes the data all occupy a similar dynamic range, so we can use magnitude-sensitive distances like Euclidean distance.\nEuclidean, recommended for analysis of the difference in compositions. e.g., when we are working to understand changes in relative abundance. Because it depends on the composition, we must input transformed data.\n\n# ?dist()\neuc_dmat &lt;- dist(asv_df, method = \"euclidean\") \n\nConduct ordination w/distance matrix = PCoA\n\npcoa_euc&lt;-ape::pcoa(euc_dmat)\n\nRepeat screeplot check. Extract variances from pcoa, from jaccard calculated dist. metric\n\neuc_variances &lt;- data.frame(pcoa_euc$values$Relative_eig) %&gt;% \n  select(PercVar = 'pcoa_euc.values.Relative_eig') %&gt;% \n  rownames_to_column(var = \"PCaxis\") %&gt;% \n  data.frame\n# head(euc_variances)\n\n# Screeplot check\nggplot(euc_variances, aes(x = as.numeric(PCaxis), y = PercVar)) + \n  geom_bar(stat = \"identity\", fill = \"grey\", color = \"black\") +\n  theme_minimal() +\n  theme(axis.title = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.text.y = element_text(color = \"black\", face = \"bold\"),\n        axis.text.x = element_blank()) +\n  labs(x = \"PC axis\", y = \"% Variance\", title = \"Euclidean\\nLog-Ratio PCoA Screeplot\")\n\n\n\n\n\nCompare what the previous scree plot looked like.\n\nIs there a difference in the ordinate output when we use a different metric?\nTo compare with the euclidean distance ordination representing differences in relative composition. Further note: If your ordination has data which align in a ‘T’ or ‘+’ shape perpendicular to the axes this is often diagnostic of covariance attributed to the higher dimensions which are not plotted.\nWhat happens if I have a screeplot that requires 3D, but I can’t do it?\nAlthough our statistical ordinations appear to require at least 3 dimensions to communicate the data. However, we don’t always have the budget for a 3D plot. So we may want to impose the condition on an ordination technique that the answer MUST go in 2D. We turn to NMDS here."
  },
  {
    "objectID": "clustering.html#nmds",
    "href": "clustering.html#nmds",
    "title": "Cluster analysis",
    "section": "NMDS",
    "text": "NMDS\n\nset.seed(1984)\n\nSo we can compare the relative composition based distance metric to the presence/absence based distance metric\n\nlibrary(vegan)\n# ?metaMDS()\n\nNMDS: force data into a desired number of dimensions, works to preserve all pairwise distances between points.\nStart with Euclidean distance again. But then transform with NMDS.\n\neuc_dmat &lt;- compositions::dist(asv_df, method = \"euclidean\") # From above\neuc_nmds &lt;- vegan:: metaMDS(euc_dmat, k = 2, autotransform = FALSE)\n\nRun 0 stress 0.009747927 \nRun 1 stress 0.01553882 \nRun 2 stress 0.01498708 \nRun 3 stress 0.01047867 \nRun 4 stress 0.009667551 \n... New best solution\n... Procrustes: rmse 0.02230998  max resid 0.4556172 \nRun 5 stress 0.007991186 \n... New best solution\n... Procrustes: rmse 0.02068838  max resid 0.4748071 \nRun 6 stress 0.01499294 \nRun 7 stress 0.008234147 \n... Procrustes: rmse 0.01596071  max resid 0.3520825 \nRun 8 stress 0.008304165 \n... Procrustes: rmse 0.01585915  max resid 0.4096863 \nRun 9 stress 0.007761174 \n... New best solution\n... Procrustes: rmse 0.009837237  max resid 0.1957055 \nRun 10 stress 0.01366587 \nRun 11 stress 0.009694091 \nRun 12 stress 0.01781326 \nRun 13 stress 0.01155348 \nRun 14 stress 0.01554772 \nRun 15 stress 0.01406257 \nRun 16 stress 0.01053438 \nRun 17 stress 0.01775998 \nRun 18 stress 0.01497913 \nRun 19 stress 0.01514318 \nRun 20 stress 0.01490975 \n*** Best solution was not repeated -- monoMDS stopping criteria:\n    20: no. of iterations &gt;= maxit\n\n\nRepeat with the Jaccard transformation\n\njac_dmat &lt;- vegan:: vegdist(t(asv_df), method = \"jaccard\") # From above\njac_nmds&lt;- vegan::metaMDS(jac_dmat, k = 2, autotransform = FALSE)\n\nRun 0 stress 0.1523259 \nRun 1 stress 0.1800741 \nRun 2 stress 0.2037203 \nRun 3 stress 0.1731681 \nRun 4 stress 0.1731681 \nRun 5 stress 0.1858211 \nRun 6 stress 0.1831991 \nRun 7 stress 0.1800741 \nRun 8 stress 0.2039983 \nRun 9 stress 0.2240731 \nRun 10 stress 0.1523259 \n... Procrustes: rmse 2.538897e-05  max resid 5.65177e-05 \n... Similar to previous best\nRun 11 stress 0.1739264 \nRun 12 stress 0.1950497 \nRun 13 stress 0.1708581 \nRun 14 stress 0.1523259 \n... New best solution\n... Procrustes: rmse 1.044647e-05  max resid 2.556225e-05 \n... Similar to previous best\nRun 15 stress 0.1523259 \n... Procrustes: rmse 3.454584e-05  max resid 8.426709e-05 \n... Similar to previous best\nRun 16 stress 0.1695962 \nRun 17 stress 0.1708582 \nRun 18 stress 0.1708584 \nRun 19 stress 0.2317667 \nRun 20 stress 0.1695962 \n*** Best solution repeated 2 times\n\n\nWarning in postMDS(out$points, dis, plot = max(0, plot - 1), ...): skipping\nhalf-change scaling: too few points below threshold\n\n\nTake a look at stress - overall this value is not extremely informative, but know that the closer stress is to 1 the less representative of your actual data the NMDS is.\n\neuc_nmds$stress \n\n[1] 0.007761174\n\njac_nmds$stress\n\n[1] 0.1523259\n\n\nAdditionally, the axes for NMDS are totally arbitrary, so axis scaling does not matter and data can be rotated/reflected about axes and the NMDS is still the same euc_nmds$points #Extract points from NMDS\n\neuc_frame &lt;- data.frame(euc_nmds$points) %&gt;% \n  rownames_to_column(var = \"TimeofDay\") %&gt;% \n  separate(TimeofDay, into = c(\"excess\", \"TimeofDay\"), sep = \"_\") %&gt;% \n  select(-excess) %&gt;% \n  data.frame\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 1000 rows [1, 2, 3, 4, 5,\n6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...].\n\n## Plotting euclidean distance NMDS\nggplot(euc_frame,aes(x = MDS1, y = MDS2, fill = TimeofDay)) +\n  geom_point(size = 4, shape = 21, color = \"black\", aes(fill = TimeofDay)) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_bw() +\n  labs(x = \"NMDS 1\", y = \"NMDS 2\", title = \"Euclidean Distance NMDS\")"
  }
]